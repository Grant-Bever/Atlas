{"ast":null,"code":"var _jsxFileName = \"/Users/christiansarmiento/Documents/GitHub/Atlas-V2/client/src/pages/ManagerCompletedOrders.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport ManagerLayout from '../components/ManagerLayout';\nimport '../styles/Table.css'; // Shared table styles\nimport '../styles/Modal.css'; // Keep for potential future modals\nimport { FaSearch, FaChevronDown, FaChevronRight, FaEllipsisV, FaEye, FaTrashAlt, FaArrowLeft, FaSort, FaSortUp, FaSortDown } from 'react-icons/fa'; // Adjusted icons\n\n// Base URL for the API (Consider moving this to a config file)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\nfunction ManagerCompletedOrders() {\n  _s();\n  const navigate = useNavigate();\n  const [completedOrders, setCompletedOrders] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [expandedRows, setExpandedRows] = useState(new Set());\n  const [openMenuId, setOpenMenuId] = useState(null); // Still useful for view/delete menu\n  // Add state for delete confirmation modal if desired\n  const [confirmDeleteModalState, setConfirmDeleteModalState] = useState({\n    isOpen: false,\n    orderId: null\n  });\n\n  // State for search and sort\n  const [searchTerm, setSearchTerm] = useState('');\n  const [sortConfig, setSortConfig] = useState({\n    key: 'date',\n    direction: 'DESC'\n  });\n  const [searchQuery, setSearchQuery] = useState(''); // For triggering search fetch\n\n  // --- Fetch Completed Orders ---\n  useEffect(() => {\n    const fetchCompletedOrders = async () => {\n      setLoading(true);\n      setError(null);\n      // Construct query parameters\n      const params = new URLSearchParams();\n      if (searchQuery) {\n        params.append('searchCustomer', searchQuery);\n      }\n      if (sortConfig.key) {\n        params.append('sortBy', sortConfig.key);\n        params.append('sortDir', sortConfig.direction);\n      }\n      const queryString = params.toString();\n      try {\n        const response = await fetch(`${API_BASE_URL}/orders/completed?${queryString}`);\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        // Ensure items is always an array\n        const ordersWithItemsArray = data.map(order => ({\n          ...order,\n          items: order.items || []\n        }));\n        setCompletedOrders(ordersWithItemsArray);\n      } catch (e) {\n        console.error(\"Failed to fetch completed orders:\", e);\n        setError(\"Failed to load completed orders. Please try again later.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchCompletedOrders();\n    // Re-fetch when searchQuery or sortConfig changes\n  }, [searchQuery, sortConfig]);\n\n  // --- Row Expansion --- (Same logic as active orders)\n  const handleRowClick = orderId => {\n    if (openMenuId !== null) {\n      setOpenMenuId(null);\n    }\n    setExpandedRows(prevExpandedRows => {\n      const newExpandedRows = new Set(prevExpandedRows);\n      if (newExpandedRows.has(orderId)) {\n        newExpandedRows.delete(orderId);\n      } else {\n        newExpandedRows.add(orderId);\n      }\n      return newExpandedRows;\n    });\n  };\n\n  // --- Actions Menu --- (Simplified for completed orders)\n  const handleMenuToggle = (e, orderId) => {\n    e.stopPropagation();\n    setOpenMenuId(prevId => prevId === orderId ? null : orderId);\n    if (expandedRows.has(orderId) && openMenuId !== orderId) {\n      handleRowClick(orderId);\n    }\n  };\n\n  // Close menu if clicking outside (Same logic)\n  useEffect(() => {\n    const handleClickOutside = event => {\n      // Check if the click is outside the menu container\n      if (openMenuId !== null && !event.target.closest(`.action-menu-container[data-order-id=\"${openMenuId}\"]`)) {\n        setOpenMenuId(null);\n      }\n    };\n    document.addEventListener('click', handleClickOutside);\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, [openMenuId]);\n\n  // --- Action Handlers --- \n  const handleViewDetails = (e, orderId) => {\n    e.stopPropagation();\n    setOpenMenuId(null);\n    // Just ensure the row is expanded to show details\n    if (!expandedRows.has(orderId)) {\n      handleRowClick(orderId);\n    }\n    console.log(`View details for completed order: ${orderId}`);\n  };\n  const handleDeleteClick = (e, orderId) => {\n    e.stopPropagation();\n    setOpenMenuId(null);\n    setConfirmDeleteModalState({\n      isOpen: true,\n      orderId: orderId\n    });\n  };\n\n  // --- Delete Modal Handlers ---\n  const handleConfirmDelete = async () => {\n    const {\n      orderId\n    } = confirmDeleteModalState;\n    if (!orderId) return;\n    setConfirmDeleteModalState({\n      isOpen: false,\n      orderId: null\n    }); // Close modal\n\n    try {\n      console.log(`Deleting completed order: ${orderId}`);\n      const response = await fetch(`${API_BASE_URL}/orders/${orderId}`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) {\n        throw new Error(`Failed to delete completed order ${orderId}. Status: ${response.status}`);\n      }\n\n      // Remove from state\n      setCompletedOrders(prevOrders => prevOrders.filter(order => order.id !== orderId));\n      setExpandedRows(prev => {\n        const newSet = new Set(prev);\n        newSet.delete(orderId);\n        return newSet;\n      });\n    } catch (err) {\n      console.error(`Error deleting completed order ${orderId}:`, err);\n      setError(`Failed to delete completed order ${orderId}. Please try again.`);\n    }\n  };\n  const handleCancelDelete = () => {\n    setConfirmDeleteModalState({\n      isOpen: false,\n      orderId: null\n    });\n  };\n\n  // --- Search Handler ---\n  const handleSearchChange = event => {\n    const newSearchTerm = event.target.value;\n    setSearchTerm(newSearchTerm);\n    // If the search term is cleared, immediately reset the search query\n    if (newSearchTerm === '') {\n      setSearchQuery('');\n    }\n  };\n  const handleSearchSubmit = event => {\n    event.preventDefault();\n    // Only trigger search if the term is not empty\n    if (searchTerm.trim() !== '') {\n      setSearchQuery(searchTerm);\n    }\n    // else {\n    //     setSearchQuery('');\n    // }\n  };\n\n  // --- Sort Handler ---\n  const handleSort = key => {\n    let direction = 'ASC';\n    if (sortConfig.key === key && sortConfig.direction === 'ASC') {\n      direction = 'DESC';\n    }\n    setSortConfig({\n      key,\n      direction\n    });\n  };\n\n  // Helper function to get sort icon\n  const getSortIcon = key => {\n    if (sortConfig.key !== key) {\n      return /*#__PURE__*/_jsxDEV(FaSort, {\n        className: \"sort-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 14\n      }, this);\n    }\n    if (sortConfig.direction === 'ASC') {\n      return /*#__PURE__*/_jsxDEV(FaSortUp, {\n        className: \"sort-icon active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(FaSortDown, {\n      className: \"sort-icon active\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 12\n    }, this);\n  };\n\n  // --- Render Logic ---\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(ManagerLayout, {\n      pageTitle: \"Completed Orders\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-indicator\",\n        children: \"Loading completed orders...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 59\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 15\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(ManagerLayout, {\n      pageTitle: \"Completed Orders\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(ManagerLayout, {\n    pageTitle: \"Completed Orders\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-actions-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-actions-left\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/orders\",\n          className: \"button button-secondary\",\n          title: \"Back to Active Orders\",\n          children: [/*#__PURE__*/_jsxDEV(FaArrowLeft, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 18\n          }, this), \" Active Orders\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-actions-right\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSearchSubmit,\n          className: \"search-bar\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search by Customer...\",\n            value: searchTerm,\n            onChange: handleSearchChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 18\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"icon-button\",\n            children: /*#__PURE__*/_jsxDEV(FaSearch, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 64\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 18\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), error && !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      style: {\n        marginBottom: '15px'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"data-table main-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              width: '30px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Invoice #\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Customer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort('date'),\n            className: \"sortable-header\",\n            children: [\"Date Completed \", getSortIcon('date')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort('total'),\n            className: \"sortable-header\",\n            children: [\"Total \", getSortIcon('total')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              width: '50px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: completedOrders.length > 0 ? completedOrders.map(order => {\n          const isExpanded = expandedRows.has(order.id);\n          const isMenuOpen = openMenuId === order.id;\n          return /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              onClick: () => handleRowClick(order.id),\n              className: `clickable-row ${isExpanded ? 'expanded' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"expand-icon-cell\",\n                children: order.items && order.items.length > 0 ? isExpanded ? /*#__PURE__*/_jsxDEV(FaChevronDown, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 76\n                }, this) : /*#__PURE__*/_jsxDEV(FaChevronRight, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 96\n                }, this) : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: order.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: order.customer ? order.customer.name : 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: new Date(order.date).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"$\", parseFloat(order.total || 0).toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"action-cell action-menu-container\",\n                \"data-order-id\": order.id,\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: e => handleMenuToggle(e, order.id),\n                  className: \"icon-button menu-dots-button\",\n                  children: /*#__PURE__*/_jsxDEV(FaEllipsisV, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 271,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 21\n                }, this), isMenuOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"action-menu\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: e => handleViewDetails(e, order.id),\n                    children: [/*#__PURE__*/_jsxDEV(FaEye, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 276,\n                      columnNumber: 81\n                    }, this), \" View Details\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 276,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: e => handleDeleteClick(e, order.id),\n                    className: \"danger\",\n                    children: [/*#__PURE__*/_jsxDEV(FaTrashAlt, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 277,\n                      columnNumber: 100\n                    }, this), \" Delete\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 277,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 17\n            }, this), isExpanded && order.items && order.items.length > 0 && /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"collapsible-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"5\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"nested-table-container\",\n                  children: /*#__PURE__*/_jsxDEV(\"table\", {\n                    className: \"data-table nested-table\",\n                    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"Quantity\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 292,\n                          columnNumber: 32\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"Item\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 293,\n                          columnNumber: 32\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"Weight\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 294,\n                          columnNumber: 32\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"Price\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 295,\n                          columnNumber: 32\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"Amount\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 296,\n                          columnNumber: 32\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"Notes\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 297,\n                          columnNumber: 32\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 291,\n                        columnNumber: 30\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 290,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                      children: order.items.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                          children: item.quantity\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 303,\n                          columnNumber: 32\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: item.item\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 304,\n                          columnNumber: 32\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: item.weight ? item.weight : '-'\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 305,\n                          columnNumber: 32\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: [\"$\", parseFloat(item.price || 0).toFixed(2)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 306,\n                          columnNumber: 32\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: [\"$\", parseFloat(item.amount || 0).toFixed(2)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 307,\n                          columnNumber: 32\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: item.notes || '-'\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 308,\n                          columnNumber: 32\n                        }, this)]\n                      }, `${order.id}-item-${item.id || index}`, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 302,\n                        columnNumber: 30\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 300,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 26\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 20\n            }, this), isExpanded && (!order.items || order.items.length === 0) && /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"collapsible-row no-items-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 26\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"5\",\n                style: {\n                  textAlign: 'center',\n                  fontStyle: 'italic',\n                  padding: '10px'\n                },\n                children: \"No item details available for this completed order.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 26\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 22\n            }, this)]\n          }, order.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"6\",\n            style: {\n              textAlign: 'center',\n              padding: '20px',\n              fontStyle: 'italic'\n            },\n            children: \"No completed orders found matching your criteria.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this), confirmDeleteModalState.isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Confirm Deletion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Are you sure you want to delete completed Invoice #\", confirmDeleteModalState.orderId, \"? This action cannot be undone.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCancelDelete,\n            className: \"button button-secondary\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleConfirmDelete,\n            className: \"button button-danger\",\n            children: \"Delete Invoice\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 16\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 212,\n    columnNumber: 5\n  }, this);\n}\n_s(ManagerCompletedOrders, \"IkF73ZjSgu8LkukGcJeOtUuy7Yg=\", false, function () {\n  return [useNavigate];\n});\n_c = ManagerCompletedOrders;\nexport default ManagerCompletedOrders;\nvar _c;\n$RefreshReg$(_c, \"ManagerCompletedOrders\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","ManagerLayout","FaSearch","FaChevronDown","FaChevronRight","FaEllipsisV","FaEye","FaTrashAlt","FaArrowLeft","FaSort","FaSortUp","FaSortDown","jsxDEV","_jsxDEV","API_BASE_URL","process","env","REACT_APP_API_URL","ManagerCompletedOrders","_s","navigate","completedOrders","setCompletedOrders","loading","setLoading","error","setError","expandedRows","setExpandedRows","Set","openMenuId","setOpenMenuId","confirmDeleteModalState","setConfirmDeleteModalState","isOpen","orderId","searchTerm","setSearchTerm","sortConfig","setSortConfig","key","direction","searchQuery","setSearchQuery","fetchCompletedOrders","params","URLSearchParams","append","queryString","toString","response","fetch","ok","Error","status","data","json","ordersWithItemsArray","map","order","items","e","console","handleRowClick","prevExpandedRows","newExpandedRows","has","delete","add","handleMenuToggle","stopPropagation","prevId","handleClickOutside","event","target","closest","document","addEventListener","removeEventListener","handleViewDetails","log","handleDeleteClick","handleConfirmDelete","method","prevOrders","filter","id","prev","newSet","err","handleCancelDelete","handleSearchChange","newSearchTerm","value","handleSearchSubmit","preventDefault","trim","handleSort","getSortIcon","className","fileName","_jsxFileName","lineNumber","columnNumber","pageTitle","children","to","title","onSubmit","type","placeholder","onChange","style","marginBottom","width","onClick","length","isExpanded","isMenuOpen","Fragment","customer","name","Date","date","toLocaleDateString","parseFloat","total","toFixed","colSpan","item","index","quantity","weight","price","amount","notes","textAlign","fontStyle","padding","_c","$RefreshReg$"],"sources":["/Users/christiansarmiento/Documents/GitHub/Atlas-V2/client/src/pages/ManagerCompletedOrders.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport ManagerLayout from '../components/ManagerLayout';\nimport '../styles/Table.css'; // Shared table styles\nimport '../styles/Modal.css'; // Keep for potential future modals\nimport { FaSearch, FaChevronDown, FaChevronRight, FaEllipsisV, FaEye, FaTrashAlt, FaArrowLeft, FaSort, FaSortUp, FaSortDown } from 'react-icons/fa'; // Adjusted icons\n\n// Base URL for the API (Consider moving this to a config file)\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\n\nfunction ManagerCompletedOrders() {\n  const navigate = useNavigate();\n  const [completedOrders, setCompletedOrders] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [expandedRows, setExpandedRows] = useState(new Set());\n  const [openMenuId, setOpenMenuId] = useState(null); // Still useful for view/delete menu\n  // Add state for delete confirmation modal if desired\n  const [confirmDeleteModalState, setConfirmDeleteModalState] = useState({ isOpen: false, orderId: null });\n\n  // State for search and sort\n  const [searchTerm, setSearchTerm] = useState('');\n  const [sortConfig, setSortConfig] = useState({ key: 'date', direction: 'DESC' });\n  const [searchQuery, setSearchQuery] = useState(''); // For triggering search fetch\n\n  // --- Fetch Completed Orders ---\n  useEffect(() => {\n    const fetchCompletedOrders = async () => {\n      setLoading(true);\n      setError(null);\n      // Construct query parameters\n      const params = new URLSearchParams();\n      if (searchQuery) {\n        params.append('searchCustomer', searchQuery);\n      }\n      if (sortConfig.key) {\n        params.append('sortBy', sortConfig.key);\n        params.append('sortDir', sortConfig.direction);\n      }\n      const queryString = params.toString();\n\n      try {\n        const response = await fetch(`${API_BASE_URL}/orders/completed?${queryString}`);\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        // Ensure items is always an array\n         const ordersWithItemsArray = data.map(order => ({\n            ...order,\n            items: order.items || []\n        }));\n        setCompletedOrders(ordersWithItemsArray);\n      } catch (e) {\n        console.error(\"Failed to fetch completed orders:\", e);\n        setError(\"Failed to load completed orders. Please try again later.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchCompletedOrders();\n     // Re-fetch when searchQuery or sortConfig changes\n  }, [searchQuery, sortConfig]);\n\n  // --- Row Expansion --- (Same logic as active orders)\n  const handleRowClick = (orderId) => {\n    if (openMenuId !== null) {\n        setOpenMenuId(null);\n    }\n    setExpandedRows(prevExpandedRows => {\n      const newExpandedRows = new Set(prevExpandedRows);\n      if (newExpandedRows.has(orderId)) {\n        newExpandedRows.delete(orderId);\n      } else {\n        newExpandedRows.add(orderId);\n      }\n      return newExpandedRows;\n    });\n  };\n\n  // --- Actions Menu --- (Simplified for completed orders)\n  const handleMenuToggle = (e, orderId) => {\n    e.stopPropagation();\n    setOpenMenuId(prevId => (prevId === orderId ? null : orderId));\n    if (expandedRows.has(orderId) && openMenuId !== orderId) {\n        handleRowClick(orderId);\n    }\n  };\n\n  // Close menu if clicking outside (Same logic)\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      // Check if the click is outside the menu container\n      if (openMenuId !== null && !event.target.closest(`.action-menu-container[data-order-id=\"${openMenuId}\"]`)) {\n        setOpenMenuId(null);\n      }\n    };\n    document.addEventListener('click', handleClickOutside);\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, [openMenuId]);\n\n  // --- Action Handlers --- \n  const handleViewDetails = (e, orderId) => {\n      e.stopPropagation();\n      setOpenMenuId(null);\n      // Just ensure the row is expanded to show details\n      if (!expandedRows.has(orderId)) {\n          handleRowClick(orderId);\n      }\n      console.log(`View details for completed order: ${orderId}`);\n  };\n\n  const handleDeleteClick = (e, orderId) => {\n    e.stopPropagation();\n    setOpenMenuId(null);\n    setConfirmDeleteModalState({ isOpen: true, orderId: orderId });\n  };\n\n  // --- Delete Modal Handlers ---\n  const handleConfirmDelete = async () => {\n    const { orderId } = confirmDeleteModalState;\n    if (!orderId) return;\n\n    setConfirmDeleteModalState({ isOpen: false, orderId: null }); // Close modal\n\n    try {\n      console.log(`Deleting completed order: ${orderId}`);\n      const response = await fetch(`${API_BASE_URL}/orders/${orderId}`, {\n        method: 'DELETE',\n      });\n\n      if (!response.ok) {\n        throw new Error(`Failed to delete completed order ${orderId}. Status: ${response.status}`);\n      }\n\n      // Remove from state\n      setCompletedOrders(prevOrders => prevOrders.filter(order => order.id !== orderId));\n      setExpandedRows(prev => {\n          const newSet = new Set(prev);\n          newSet.delete(orderId);\n          return newSet;\n      });\n\n    } catch (err) {\n      console.error(`Error deleting completed order ${orderId}:`, err);\n      setError(`Failed to delete completed order ${orderId}. Please try again.`);\n    }\n  };\n\n  const handleCancelDelete = () => {\n    setConfirmDeleteModalState({ isOpen: false, orderId: null });\n  };\n\n  // --- Search Handler ---\n  const handleSearchChange = (event) => {\n    const newSearchTerm = event.target.value;\n    setSearchTerm(newSearchTerm);\n    // If the search term is cleared, immediately reset the search query\n    if (newSearchTerm === '') {\n      setSearchQuery('');\n    }\n  };\n\n  const handleSearchSubmit = (event) => {\n    event.preventDefault();\n    // Only trigger search if the term is not empty\n    if (searchTerm.trim() !== '') {\n        setSearchQuery(searchTerm);\n    }\n    // else {\n    //     setSearchQuery('');\n    // }\n  };\n\n  // --- Sort Handler ---\n  const handleSort = (key) => {\n    let direction = 'ASC';\n    if (sortConfig.key === key && sortConfig.direction === 'ASC') {\n      direction = 'DESC';\n    }\n    setSortConfig({ key, direction });\n  };\n\n  // Helper function to get sort icon\n  const getSortIcon = (key) => {\n    if (sortConfig.key !== key) {\n      return <FaSort className=\"sort-icon\" />;\n    }\n    if (sortConfig.direction === 'ASC') {\n      return <FaSortUp className=\"sort-icon active\" />;\n    }\n    return <FaSortDown className=\"sort-icon active\" />;\n  };\n\n  // --- Render Logic ---\n   if (loading) {\n       return <ManagerLayout pageTitle=\"Completed Orders\"><div className=\"loading-indicator\">Loading completed orders...</div></ManagerLayout>;\n   }\n\n   if (error) {\n       return (\n           <ManagerLayout pageTitle=\"Completed Orders\">\n               <div className=\"error-message\">{error}</div>\n           </ManagerLayout>\n       );\n   }\n\n  return (\n    <ManagerLayout pageTitle=\"Completed Orders\">\n      <div className=\"page-actions-bar\">\n        <div className=\"page-actions-left\">\n             <Link to=\"/orders\" className=\"button button-secondary\" title=\"Back to Active Orders\">\n                 <FaArrowLeft /> Active Orders\n             </Link>\n         </div>\n         <div className=\"page-actions-right\">\n             <form onSubmit={handleSearchSubmit} className=\"search-bar\">\n                 <input\n                     type=\"text\"\n                     placeholder=\"Search by Customer...\"\n                     value={searchTerm}\n                     onChange={handleSearchChange}\n                 />\n                 <button type=\"submit\" className=\"icon-button\"><FaSearch /></button>\n             </form>\n        </div>\n      </div>\n\n      {/* Display general error messages here if needed */}\n       {error && !loading && <div className=\"error-message\" style={{ marginBottom: '15px' }}>{error}</div>}\n\n      {/* Completed Orders Table */}\n      <table className=\"data-table main-table\">\n        <thead>\n          <tr>\n            <th style={{ width: '30px' }}></th>{/* Expand Icon */}\n            <th>Invoice #</th>\n            <th>Customer</th>\n            <th onClick={() => handleSort('date')} className=\"sortable-header\">\n                Date Completed {getSortIcon('date')}\n            </th>\n            <th onClick={() => handleSort('total')} className=\"sortable-header\">\n                Total {getSortIcon('total')}\n            </th>\n            <th style={{ width: '50px' }}></th>{/* Actions Menu */}\n          </tr>\n        </thead>\n        <tbody>\n          {completedOrders.length > 0 ? completedOrders.map((order) => {\n            const isExpanded = expandedRows.has(order.id);\n            const isMenuOpen = openMenuId === order.id;\n\n            return (\n              <React.Fragment key={order.id}>\n                {/* Main Order Row */}\n                <tr onClick={() => handleRowClick(order.id)} className={`clickable-row ${isExpanded ? 'expanded' : ''}`}>\n                  <td className=\"expand-icon-cell\">\n                    {order.items && order.items.length > 0 ? (isExpanded ? <FaChevronDown /> : <FaChevronRight />) : ''}\n                  </td>\n                  <td>{order.id}</td>\n                  <td>{order.customer ? order.customer.name : 'N/A'}</td>\n                  {/* Assuming the 'date' field reflects completion date or use updatedAt if available/relevant */}\n                  <td>{new Date(order.date).toLocaleDateString()}</td>\n                  <td>${parseFloat(order.total || 0).toFixed(2)}</td>\n                  {/* Actions Cell */}\n                  <td className=\"action-cell action-menu-container\" data-order-id={order.id}>\n                    <button onClick={(e) => handleMenuToggle(e, order.id)} className=\"icon-button menu-dots-button\">\n                      <FaEllipsisV />\n                    </button>\n                    {/* Action Menu Dropdown */}\n                    {isMenuOpen && (\n                      <div className=\"action-menu\">\n                        <button onClick={(e) => handleViewDetails(e, order.id)}><FaEye /> View Details</button>\n                        <button onClick={(e) => handleDeleteClick(e, order.id)} className=\"danger\"><FaTrashAlt /> Delete</button>\n                      </div>\n                    )}\n                  </td>\n                </tr>\n\n                {/* Collapsible Row with Nested Table */}\n                {isExpanded && order.items && order.items.length > 0 && (\n                   <tr className=\"collapsible-row\">\n                    <td></td>\n                    <td colSpan=\"5\">\n                      <div className=\"nested-table-container\">\n                         <table className=\"data-table nested-table\">\n                          <thead>\n                             <tr>\n                               <th>Quantity</th>\n                               <th>Item</th>\n                               <th>Weight</th>\n                               <th>Price</th>\n                               <th>Amount</th>\n                               <th>Notes</th>\n                             </tr>\n                          </thead>\n                          <tbody>\n                          {order.items.map((item, index) => (\n                             <tr key={`${order.id}-item-${item.id || index}`}>\n                               <td>{item.quantity}</td>\n                               <td>{item.item}</td>\n                               <td>{item.weight ? item.weight : '-'}</td>\n                               <td>${parseFloat(item.price || 0).toFixed(2)}</td>\n                               <td>${parseFloat(item.amount || 0).toFixed(2)}</td>\n                               <td>{item.notes || '-'}</td>\n                             </tr>\n                              ))}\n                           </tbody>\n                        </table>\n                      </div>\n                    </td>\n                  </tr>\n                )}\n                {isExpanded && (!order.items || order.items.length === 0) && (\n                     <tr className=\"collapsible-row no-items-row\">\n                         <td></td>\n                         <td colSpan=\"5\" style={{ textAlign: 'center', fontStyle: 'italic', padding: '10px' }}>\n                             No item details available for this completed order.\n                         </td>\n                     </tr>\n                 )}\n              </React.Fragment>\n            );\n          }) : (\n             <tr>\n                <td colSpan=\"6\" style={{ textAlign: 'center', padding: '20px', fontStyle: 'italic' }}>No completed orders found matching your criteria.</td>\n             </tr>\n          )}\n        </tbody>\n      </table>\n\n      {/* Confirmation Modal for Delete */}\n       {confirmDeleteModalState.isOpen && (\n         <div className=\"modal-overlay\">\n           <div className=\"modal-content\">\n             <h4>Confirm Deletion</h4>\n             <p>Are you sure you want to delete completed Invoice #{confirmDeleteModalState.orderId}? This action cannot be undone.</p>\n             <div className=\"modal-actions\">\n               <button onClick={handleCancelDelete} className=\"button button-secondary\">Cancel</button>\n               <button onClick={handleConfirmDelete} className=\"button button-danger\">Delete Invoice</button>\n             </div>\n           </div>\n         </div>\n       )}\n\n    </ManagerLayout>\n  );\n}\n\nexport default ManagerCompletedOrders; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}