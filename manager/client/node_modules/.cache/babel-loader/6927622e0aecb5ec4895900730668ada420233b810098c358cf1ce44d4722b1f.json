{"ast":null,"code":"var _jsxFileName = \"/Users/christiansarmiento/Documents/GitHub/Atlas-V2/client/src/pages/ManagerAddEmployee.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport ManagerLayout from '../components/ManagerLayout';\nimport '../styles/FormPage.css'; // Shared form styles (create this)\nimport '../styles/Modal.css'; // Use existing modal styles\n\n// --- Sample Data Fetching (Replace with actual API call) ---\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fetchEmployeeData = employeeId => {\n  console.log(\"Fetching data for employee ID:\", employeeId);\n  // Simulate finding employee data\n  const allEmployees = [{\n    employeeId: 101,\n    name: 'Alice Johnson',\n    hourlyWage: 20.00,\n    jobTitle: 'Lead Butcher',\n    dateHired: '2023-01-15',\n    phoneNumber: '555-123-4567',\n    email: 'alice.j@example.com'\n  }, {\n    employeeId: 102,\n    name: 'Bob Smith',\n    hourlyWage: 18.50,\n    jobTitle: 'Cashier',\n    dateHired: '2023-06-01',\n    phoneNumber: '555-987-6543',\n    email: 'bob.s@example.com'\n  }];\n  const numericEmployeeId = parseInt(employeeId, 10);\n  const foundEmployee = allEmployees.find(emp => emp.employeeId === numericEmployeeId);\n  return foundEmployee ? Promise.resolve(foundEmployee) : Promise.resolve(null);\n};\n// --- End Sample Data Fetching ---\n\nfunction AddEmployee() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    employeeId\n  } = useParams(); // Get employeeId from URL\n  const isEditing = Boolean(employeeId);\n  const [employeeName, setEmployeeName] = useState('');\n  const [dateHired, setDateHired] = useState(new Date().toISOString().split('T')[0]);\n  const [hourlyWage, setHourlyWage] = useState('');\n  const [jobTitle, setJobTitle] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [email, setEmail] = useState('');\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isLoading, setIsLoading] = useState(isEditing); // Loading state for edit mode\n  const [error, setError] = useState(null);\n\n  // Fetch data if editing\n  useEffect(() => {\n    if (isEditing) {\n      setIsLoading(true);\n      fetchEmployeeData(employeeId).then(data => {\n        if (data) {\n          setEmployeeName(data.name || '');\n          setDateHired(data.dateHired || new Date().toISOString().split('T')[0]);\n          setHourlyWage(data.hourlyWage !== undefined ? String(data.hourlyWage) : '');\n          setJobTitle(data.jobTitle || '');\n          setPhoneNumber(data.phoneNumber || '');\n          setEmail(data.email || '');\n        } else {\n          setError('Employee not found.');\n        }\n      }).catch(err => {\n        console.error(\"Error fetching employee data:\", err);\n        setError('Failed to load employee data.');\n      }).finally(() => {\n        setIsLoading(false);\n      });\n    }\n  }, [employeeId, isEditing]);\n  const handleAttemptSave = e => {\n    e.preventDefault();\n    if (isEditing) {\n      // Skip modal if just editing existing info\n      handleConfirmSave();\n    } else {\n      // Show modal only when adding a new employee\n      setIsModalOpen(true);\n    }\n  };\n  const handleConfirmSave = () => {\n    const employeePayload = {\n      employeeName,\n      dateHired,\n      hourlyWage: parseFloat(hourlyWage) || 0,\n      jobTitle,\n      phoneNumber,\n      email\n    };\n    if (isEditing) {\n      console.log(`UPDATING Employee ${employeeId}:`, employeePayload);\n      // TODO: API call to update employeeId\n    } else {\n      console.log(\"SAVING New Employee:\", employeePayload);\n      // TODO: API call to create new employee\n      // TODO: Send welcome/setup email to employee\n      console.log(`Sending setup email to ${email}`);\n    }\n    setIsModalOpen(false); // Close modal if it was open\n    navigate('/employees');\n  };\n  const handleCancelSave = () => {\n    setIsModalOpen(false);\n  };\n  const handleCancelForm = () => {\n    navigate('/employees');\n  };\n\n  // --- Render Logic ---\n  if (isLoading && isEditing) {\n    // Show loading only when editing\n    return /*#__PURE__*/_jsxDEV(ManagerLayout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading employee data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 14\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(ManagerLayout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red',\n          padding: '20px'\n        },\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 31\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 16\n    }, this);\n  }\n  return (\n    /*#__PURE__*/\n    // Update page title dynamically\n    _jsxDEV(ManagerLayout, {\n      pageTitle: isEditing ? `Edit Employee: ${employeeName || employeeId}` : 'Add New Employee',\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-page-container\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleAttemptSave,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-page-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: isEditing ? 'Edit Employee Details' : 'Add New Employee'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-page-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: handleCancelForm,\n                className: \"button button-secondary\",\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"button button-primary\",\n                children: isEditing ? 'Update Employee' : 'Save Employee'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-grid\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"employeeName\",\n                children: \"Employee Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"employeeName\",\n                value: employeeName,\n                onChange: e => setEmployeeName(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"dateHired\",\n                children: \"Date Hired\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                id: \"dateHired\",\n                value: dateHired,\n                onChange: e => setDateHired(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"hourlyWage\",\n                children: \"Hourly Wage ($)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                step: \"0.01\",\n                id: \"hourlyWage\",\n                value: hourlyWage,\n                onChange: e => setHourlyWage(e.target.value),\n                required: true,\n                placeholder: \"e.g., 18.50\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"jobTitle\",\n                children: \"Job Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"jobTitle\",\n                value: jobTitle,\n                onChange: e => setJobTitle(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"phoneNumber\",\n                children: \"Phone Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"tel\",\n                id: \"phoneNumber\",\n                value: phoneNumber,\n                onChange: e => setPhoneNumber(e.target.value),\n                placeholder: \"(Optional)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 14\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"email\",\n                children: \"Email Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                id: \"email\",\n                value: email,\n                onChange: e => setEmail(e.target.value),\n                required: true,\n                placeholder: \"Used for account setup\",\n                disabled: isEditing\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }, this), !isEditing && isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Confirm Employee Addition\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Adding this employee will send them an email inviting them to create an account to manage their timesheets. Do you want to proceed?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleCancelSave,\n              className: \"button button-secondary\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleConfirmSave,\n              className: \"button button-primary\",\n              children: \"Confirm & Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(AddEmployee, \"lWH5KRkRP7EjBI0hD93Kdhe/lSI=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = AddEmployee;\nexport default AddEmployee;\nvar _c;\n$RefreshReg$(_c, \"AddEmployee\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","ManagerLayout","jsxDEV","_jsxDEV","fetchEmployeeData","employeeId","console","log","allEmployees","name","hourlyWage","jobTitle","dateHired","phoneNumber","email","numericEmployeeId","parseInt","foundEmployee","find","emp","Promise","resolve","AddEmployee","_s","navigate","isEditing","Boolean","employeeName","setEmployeeName","setDateHired","Date","toISOString","split","setHourlyWage","setJobTitle","setPhoneNumber","setEmail","isModalOpen","setIsModalOpen","isLoading","setIsLoading","error","setError","then","data","undefined","String","catch","err","finally","handleAttemptSave","e","preventDefault","handleConfirmSave","employeePayload","parseFloat","handleCancelSave","handleCancelForm","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","padding","pageTitle","className","onSubmit","type","onClick","htmlFor","id","value","onChange","target","required","step","placeholder","disabled","_c","$RefreshReg$"],"sources":["/Users/christiansarmiento/Documents/GitHub/Atlas-V2/client/src/pages/ManagerAddEmployee.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport ManagerLayout from '../components/ManagerLayout';\nimport '../styles/FormPage.css'; // Shared form styles (create this)\nimport '../styles/Modal.css';  // Use existing modal styles\n\n// --- Sample Data Fetching (Replace with actual API call) ---\nconst fetchEmployeeData = (employeeId) => {\n  console.log(\"Fetching data for employee ID:\", employeeId);\n  // Simulate finding employee data\n   const allEmployees = [\n      { employeeId: 101, name: 'Alice Johnson', hourlyWage: 20.00, jobTitle: 'Lead Butcher', dateHired: '2023-01-15', phoneNumber: '555-123-4567', email: 'alice.j@example.com' },\n      { employeeId: 102, name: 'Bob Smith', hourlyWage: 18.50, jobTitle: 'Cashier', dateHired: '2023-06-01', phoneNumber: '555-987-6543', email: 'bob.s@example.com' },\n   ];\n   const numericEmployeeId = parseInt(employeeId, 10);\n   const foundEmployee = allEmployees.find(emp => emp.employeeId === numericEmployeeId);\n   return foundEmployee ? Promise.resolve(foundEmployee) : Promise.resolve(null); \n};\n// --- End Sample Data Fetching ---\n\nfunction AddEmployee() {\n  const navigate = useNavigate();\n  const { employeeId } = useParams(); // Get employeeId from URL\n  const isEditing = Boolean(employeeId);\n\n  const [employeeName, setEmployeeName] = useState('');\n  const [dateHired, setDateHired] = useState(new Date().toISOString().split('T')[0]);\n  const [hourlyWage, setHourlyWage] = useState('');\n  const [jobTitle, setJobTitle] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [email, setEmail] = useState('');\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isLoading, setIsLoading] = useState(isEditing); // Loading state for edit mode\n  const [error, setError] = useState(null);\n\n  // Fetch data if editing\n  useEffect(() => {\n    if (isEditing) {\n      setIsLoading(true);\n      fetchEmployeeData(employeeId)\n        .then(data => {\n          if (data) {\n            setEmployeeName(data.name || '');\n            setDateHired(data.dateHired || new Date().toISOString().split('T')[0]);\n            setHourlyWage(data.hourlyWage !== undefined ? String(data.hourlyWage) : '');\n            setJobTitle(data.jobTitle || '');\n            setPhoneNumber(data.phoneNumber || '');\n            setEmail(data.email || '');\n          } else {\n            setError('Employee not found.');\n          }\n        })\n        .catch(err => {\n           console.error(\"Error fetching employee data:\", err);\n           setError('Failed to load employee data.');\n        })\n        .finally(() => {\n           setIsLoading(false);\n        });\n    }\n  }, [employeeId, isEditing]);\n\n  const handleAttemptSave = (e) => {\n    e.preventDefault();\n    if (isEditing) { \n        // Skip modal if just editing existing info\n        handleConfirmSave();\n    } else {\n        // Show modal only when adding a new employee\n        setIsModalOpen(true);\n    } \n  };\n\n  const handleConfirmSave = () => {\n    const employeePayload = {\n      employeeName,\n      dateHired,\n      hourlyWage: parseFloat(hourlyWage) || 0,\n      jobTitle,\n      phoneNumber,\n      email\n    };\n\n    if (isEditing) {\n      console.log(`UPDATING Employee ${employeeId}:`, employeePayload);\n      // TODO: API call to update employeeId\n    } else {\n      console.log(\"SAVING New Employee:\", employeePayload);\n      // TODO: API call to create new employee\n      // TODO: Send welcome/setup email to employee\n      console.log(`Sending setup email to ${email}`);\n    }\n\n    setIsModalOpen(false); // Close modal if it was open\n    navigate('/employees'); \n  };\n\n  const handleCancelSave = () => {\n    setIsModalOpen(false);\n  };\n\n  const handleCancelForm = () => {\n    navigate('/employees');\n  };\n\n  // --- Render Logic ---\n   if (isLoading && isEditing) { // Show loading only when editing\n      return <ManagerLayout><div>Loading employee data...</div></ManagerLayout>;\n   }\n\n   if (error) {\n        return <ManagerLayout><div style={{ color: 'red', padding: '20px' }}>Error: {error}</div></ManagerLayout>;\n   }\n\n  return (\n    // Update page title dynamically\n    <ManagerLayout pageTitle={isEditing ? `Edit Employee: ${employeeName || employeeId}` : 'Add New Employee'}> \n      <div className=\"form-page-container\">\n        <form onSubmit={handleAttemptSave}>\n          <div className=\"form-page-header\">\n             {/* Update form title dynamically */}\n            <h2>{isEditing ? 'Edit Employee Details' : 'Add New Employee'}</h2> \n            <div className=\"form-page-actions\">\n              <button type=\"button\" onClick={handleCancelForm} className=\"button button-secondary\">Cancel</button>\n              <button type=\"submit\" className=\"button button-primary\">{isEditing ? 'Update Employee' : 'Save Employee'}</button>\n            </div>\n          </div>\n\n          {/* Form Fields (values are bound to state) */}\n          <div className=\"form-grid\">\n            <div className=\"form-field\">\n              <label htmlFor=\"employeeName\">Employee Name</label>\n              <input type=\"text\" id=\"employeeName\" value={employeeName} onChange={(e) => setEmployeeName(e.target.value)} required />\n            </div>\n            <div className=\"form-field\">\n              <label htmlFor=\"dateHired\">Date Hired</label>\n              <input type=\"date\" id=\"dateHired\" value={dateHired} onChange={(e) => setDateHired(e.target.value)} required />\n            </div>\n            <div className=\"form-field\">\n              <label htmlFor=\"hourlyWage\">Hourly Wage ($)</label>\n              <input type=\"number\" step=\"0.01\" id=\"hourlyWage\" value={hourlyWage} onChange={(e) => setHourlyWage(e.target.value)} required placeholder=\"e.g., 18.50\" />\n            </div>\n            <div className=\"form-field\">\n              <label htmlFor=\"jobTitle\">Job Title</label>\n              <input type=\"text\" id=\"jobTitle\" value={jobTitle} onChange={(e) => setJobTitle(e.target.value)} />\n            </div>\n             <div className=\"form-field\">\n              <label htmlFor=\"phoneNumber\">Phone Number</label>\n              <input type=\"tel\" id=\"phoneNumber\" value={phoneNumber} onChange={(e) => setPhoneNumber(e.target.value)} placeholder=\"(Optional)\"/>\n            </div>\n            <div className=\"form-field\">\n              <label htmlFor=\"email\">Email Address</label>\n              {/* Disable email editing for existing employees? Optional */}\n              <input type=\"email\" id=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} required placeholder=\"Used for account setup\" disabled={isEditing} />\n            </div>\n          </div>\n        </form>\n      </div>\n\n      {/* Confirmation Modal (only shown when adding new) */}\n      {!isEditing && isModalOpen && ( \n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <h4>Confirm Employee Addition</h4>\n            <p>Adding this employee will send them an email inviting them to create an account to manage their timesheets. Do you want to proceed?</p>\n            <div className=\"modal-actions\">\n              <button onClick={handleCancelSave} className=\"button button-secondary\">Cancel</button>\n              <button onClick={handleConfirmSave} className=\"button button-primary\">Confirm & Save</button>\n            </div>\n          </div>\n        </div>\n      )}\n    </ManagerLayout>\n  );\n}\n\nexport default AddEmployee; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}