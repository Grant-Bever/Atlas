{"ast":null,"code":"var _jsxFileName = \"/Users/christiansarmiento/Documents/GitHub/Atlas-V2/client/src/pages/ManagerActiveOrders.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport ManagerLayout from '../components/ManagerLayout';\nimport '../styles/Table.css'; // Shared table styles\nimport '../styles/Modal.css'; // Import Modal styles\nimport { FaPlus, FaEdit, FaTrashAlt, FaSearch, FaUpload, FaChevronDown, FaChevronRight, FaEllipsisV, FaCheckSquare, FaHistory, FaSort, FaSortUp, FaSortDown } from 'react-icons/fa';\n\n// Base URL for the API (Consider moving this to a config file)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\nfunction ManagerActiveOrders() {\n  _s();\n  const navigate = useNavigate();\n  const [orders, setOrders] = useState([]); // Initialize with empty array\n  const [loading, setLoading] = useState(true); // Add loading state\n  const [error, setError] = useState(null); // Add error state\n  const [expandedRows, setExpandedRows] = useState(new Set());\n  const [openMenuId, setOpenMenuId] = useState(null); // Track which menu is open\n  const [confirmModalState, setConfirmModalState] = useState({\n    isOpen: false,\n    orderId: null,\n    type: null\n  }); // Added type for modal reuse\n\n  // State for search and sort\n  const [searchTerm, setSearchTerm] = useState('');\n  const [sortConfig, setSortConfig] = useState({\n    key: 'date',\n    direction: 'DESC'\n  });\n  const [searchQuery, setSearchQuery] = useState(''); // For triggering search fetch\n\n  // --- Fetch Active Orders ---\n  useEffect(() => {\n    const fetchActiveOrders = async () => {\n      setLoading(true);\n      setError(null);\n      // Construct query parameters\n      const params = new URLSearchParams();\n      if (searchQuery) {\n        params.append('searchCustomer', searchQuery);\n      }\n      if (sortConfig.key) {\n        params.append('sortBy', sortConfig.key);\n        params.append('sortDir', sortConfig.direction);\n      }\n      const queryString = params.toString();\n      try {\n        const response = await fetch(`${API_BASE_URL}/orders/active?${queryString}`);\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        const ordersWithItemsArray = data.map(order => ({\n          ...order,\n          items: order.items || []\n        }));\n        setOrders(ordersWithItemsArray);\n      } catch (e) {\n        console.error(\"Failed to fetch active orders:\", e);\n        setError(\"Failed to load active orders. Please try again later.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchActiveOrders();\n    // Re-fetch when searchQuery or sortConfig changes\n  }, [searchQuery, sortConfig]);\n\n  // --- Row Expansion ---\n  const handleRowClick = orderId => {\n    // Close menu if clicking on a row\n    if (openMenuId !== null) {\n      setOpenMenuId(null);\n    }\n    setExpandedRows(prevExpandedRows => {\n      const newExpandedRows = new Set(prevExpandedRows);\n      if (newExpandedRows.has(orderId)) {\n        newExpandedRows.delete(orderId);\n      } else {\n        newExpandedRows.add(orderId);\n      }\n      return newExpandedRows;\n    });\n  };\n\n  // --- Actions Menu ---\n  const handleMenuToggle = (e, orderId) => {\n    e.stopPropagation(); // Prevent row click when clicking dots\n    setOpenMenuId(prevId => prevId === orderId ? null : orderId);\n    // Close expanded row if opening menu for it\n    if (expandedRows.has(orderId) && openMenuId !== orderId) {\n      handleRowClick(orderId);\n    }\n  };\n\n  // Close menu if clicking outside\n  useEffect(() => {\n    const handleClickOutside = event => {\n      // Check if the click is outside the menu container\n      if (openMenuId !== null && !event.target.closest(`.action-menu-container[data-order-id=\"${openMenuId}\"]`)) {\n        setOpenMenuId(null);\n      }\n    };\n    document.addEventListener('click', handleClickOutside);\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, [openMenuId]);\n\n  // --- Action Handlers ---\n  const handleEdit = (e, orderId) => {\n    e.stopPropagation();\n    setOpenMenuId(null); // Close menu\n    console.log(`Navigating to edit order: ${orderId}`);\n    navigate(`/orders/edit/${orderId}`); // Navigate to the edit route\n  };\n  const handleDeleteClick = (e, orderId) => {\n    e.stopPropagation();\n    setOpenMenuId(null); // Close menu\n    setConfirmModalState({\n      isOpen: true,\n      orderId: orderId,\n      type: 'delete'\n    }); // Open modal for deletion\n  };\n  const handleMarkCompleteClick = (e, orderId) => {\n    e.stopPropagation();\n    setOpenMenuId(null); // Close menu\n    setConfirmModalState({\n      isOpen: true,\n      orderId: orderId,\n      type: 'complete'\n    }); // Open modal for completion\n  };\n\n  // --- Modal Handlers ---\n  const handleConfirmAction = async () => {\n    const {\n      orderId,\n      type\n    } = confirmModalState;\n    if (!orderId || !type) return;\n\n    // Close modal immediately\n    setConfirmModalState({\n      isOpen: false,\n      orderId: null,\n      type: null\n    });\n    try {\n      let response;\n      if (type === 'delete') {\n        console.log(`Deleting order: ${orderId}`);\n        response = await fetch(`${API_BASE_URL}/orders/${orderId}`, {\n          method: 'DELETE'\n        });\n        if (!response.ok) {\n          throw new Error(`Failed to delete order ${orderId}. Status: ${response.status}`);\n        }\n        // Remove from state on successful deletion\n        setOrders(prevOrders => prevOrders.filter(order => order.id !== orderId));\n        // Also remove from expanded rows if it was expanded\n        setExpandedRows(prev => {\n          const newSet = new Set(prev);\n          newSet.delete(orderId);\n          return newSet;\n        });\n      } else if (type === 'complete') {\n        console.log(`Marking order ${orderId} complete.`);\n        response = await fetch(`${API_BASE_URL}/orders/${orderId}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            completed: true\n          }) // Send update data\n        });\n        if (!response.ok) {\n          throw new Error(`Failed to mark order ${orderId} as complete. Status: ${response.status}`);\n        }\n        // Remove from active orders list visually\n        setOrders(prevOrders => prevOrders.filter(order => order.id !== orderId));\n        // Also remove from expanded rows\n        setExpandedRows(prev => {\n          const newSet = new Set(prev);\n          newSet.delete(orderId);\n          return newSet;\n        });\n      }\n    } catch (err) {\n      console.error(`Error during ${type} action for order ${orderId}:`, err);\n      setError(`Failed to ${type} order ${orderId}. Please try again.`); // Display error to user\n      // Optionally refetch data here if needed to reset state on error\n    }\n  };\n  const handleCancelAction = () => {\n    setConfirmModalState({\n      isOpen: false,\n      orderId: null,\n      type: null\n    }); // Close modal\n  };\n\n  // --- Search Handler ---\n  const handleSearchChange = event => {\n    const newSearchTerm = event.target.value;\n    setSearchTerm(newSearchTerm);\n    // If the search term is cleared, immediately reset the search query to show all orders\n    if (newSearchTerm === '') {\n      setSearchQuery('');\n    }\n  };\n  const handleSearchSubmit = event => {\n    event.preventDefault(); // Prevent page reload if inside a form\n    // Only trigger search if the term is not empty\n    if (searchTerm.trim() !== '') {\n      setSearchQuery(searchTerm);\n    }\n    // Optional: if search term is empty on submit, also clear results\n    // else {\n    //     setSearchQuery(''); \n    // }\n  };\n\n  // --- Sort Handler ---\n  const handleSort = key => {\n    let direction = 'ASC';\n    if (sortConfig.key === key && sortConfig.direction === 'ASC') {\n      direction = 'DESC';\n    }\n    setSortConfig({\n      key,\n      direction\n    });\n  };\n\n  // Helper function to get sort icon\n  const getSortIcon = key => {\n    if (sortConfig.key !== key) {\n      return /*#__PURE__*/_jsxDEV(FaSort, {\n        className: \"sort-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 14\n      }, this); // Default icon\n    }\n    if (sortConfig.direction === 'ASC') {\n      return /*#__PURE__*/_jsxDEV(FaSortUp, {\n        className: \"sort-icon active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(FaSortDown, {\n      className: \"sort-icon active\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 12\n    }, this);\n  };\n\n  // --- Render Logic ---\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(ManagerLayout, {\n      pageTitle: \"Active Orders\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-indicator\",\n        children: \"Loading active orders...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 53\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Display error message if loading fails\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(ManagerLayout, {\n      pageTitle: \"Active Orders\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 11\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(ManagerLayout, {\n    pageTitle: \"Active Orders\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-actions-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-actions-left\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/orders/new\",\n          className: \"button button-primary\",\n          children: [/*#__PURE__*/_jsxDEV(FaPlus, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 17\n          }, this), \" New Invoice\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/orders/completed\",\n          className: \"button button-secondary\",\n          title: \"View Completed Orders\",\n          children: [/*#__PURE__*/_jsxDEV(FaHistory, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 17\n          }, this), \" Completed\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-actions-right\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSearchSubmit,\n          className: \"search-bar\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search by Customer...\",\n            value: searchTerm,\n            onChange: handleSearchChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"icon-button\",\n            children: /*#__PURE__*/_jsxDEV(FaSearch, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 63\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this), error && !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      style: {\n        marginBottom: '15px'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"data-table main-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              width: '30px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Invoice #\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Customer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort('date'),\n            className: \"sortable-header\",\n            children: [\"Date \", getSortIcon('date')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort('total'),\n            className: \"sortable-header\",\n            children: [\"Total \", getSortIcon('total')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              width: '50px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: orders.length > 0 ? orders.map(order => {\n          const isExpanded = expandedRows.has(order.id);\n          const isMenuOpen = openMenuId === order.id;\n          return /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              onClick: () => handleRowClick(order.id),\n              className: `clickable-row ${isExpanded ? 'expanded' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"expand-icon-cell\",\n                children: [order.items && order.items.length > 0 ? isExpanded ? /*#__PURE__*/_jsxDEV(FaChevronDown, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 76\n                }, this) : /*#__PURE__*/_jsxDEV(FaChevronRight, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 96\n                }, this) : '', \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: order.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: order.customer ? order.customer.name : 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: new Date(order.date).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"$\", parseFloat(order.total || 0).toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"action-cell action-menu-container\",\n                \"data-order-id\": order.id,\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: e => handleMenuToggle(e, order.id),\n                  className: \"icon-button menu-dots-button\",\n                  children: /*#__PURE__*/_jsxDEV(FaEllipsisV, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 307,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 22\n                }, this), isMenuOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"action-menu\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: e => handleEdit(e, order.id),\n                    children: [/*#__PURE__*/_jsxDEV(FaEdit, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 312,\n                      columnNumber: 74\n                    }, this), \" Edit\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 312,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: e => handleDeleteClick(e, order.id),\n                    className: \"danger\",\n                    children: [/*#__PURE__*/_jsxDEV(FaTrashAlt, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 313,\n                      columnNumber: 100\n                    }, this), \" Delete\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 313,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: e => handleMarkCompleteClick(e, order.id),\n                    children: [/*#__PURE__*/_jsxDEV(FaCheckSquare, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 314,\n                      columnNumber: 87\n                    }, this), \" Mark Complete\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 314,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 17\n            }, this), isExpanded && order.items && order.items.length > 0 && /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"collapsible-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 21\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"5\",\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"nested-table-container\",\n                  children: /*#__PURE__*/_jsxDEV(\"table\", {\n                    className: \"data-table nested-table\",\n                    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"Quantity\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 329,\n                          columnNumber: 32\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"Item\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 330,\n                          columnNumber: 32\n                        }, this), \" \", /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"Weight\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 331,\n                          columnNumber: 32\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"Price\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 332,\n                          columnNumber: 32\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"Amount\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 333,\n                          columnNumber: 32\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"Notes\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 334,\n                          columnNumber: 32\n                        }, this), \" \"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 328,\n                        columnNumber: 30\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 327,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                      children: order.items.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: [\" \", /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: item.quantity\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 340,\n                          columnNumber: 32\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: item.item\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 341,\n                          columnNumber: 32\n                        }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: item.weight ? item.weight : '-'\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 342,\n                          columnNumber: 32\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: [\"$\", parseFloat(item.price || 0).toFixed(2)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 343,\n                          columnNumber: 32\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: [\"$\", parseFloat(item.amount || 0).toFixed(2)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 344,\n                          columnNumber: 32\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: item.notes || '-'\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 345,\n                          columnNumber: 32\n                        }, this), \" \"]\n                      }, `${order.id}-item-${item.id || index}`, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 339,\n                        columnNumber: 30\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 337,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 326,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 20\n            }, this), isExpanded && (!order.items || order.items.length === 0) && /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"collapsible-row no-items-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 26\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"5\",\n                style: {\n                  textAlign: 'center',\n                  fontStyle: 'italic',\n                  padding: '10px'\n                },\n                children: \"No items associated with this order.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 26\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 22\n            }, this)]\n          }, order.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"6\",\n            style: {\n              textAlign: 'center',\n              padding: '20px',\n              fontStyle: 'italic'\n            },\n            children: \"No active orders found matching your criteria.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this), confirmModalState.isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Confirm Action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: confirmModalState.type === 'delete' ? `Are you sure you want to delete Invoice #${confirmModalState.orderId}? This action cannot be undone.` : `Are you sure you want to mark Invoice #${confirmModalState.orderId} as complete?`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCancelAction,\n            className: \"button button-secondary\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleConfirmAction,\n            className: `button ${confirmModalState.type === 'delete' ? 'button-danger' : 'button-primary'}`,\n            children: confirmModalState.type === 'delete' ? 'Delete Invoice' : 'Mark Complete'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 242,\n    columnNumber: 5\n  }, this);\n}\n_s(ManagerActiveOrders, \"9jJxsSWuAwhR3IJLjrJjIB6kOlk=\", false, function () {\n  return [useNavigate];\n});\n_c = ManagerActiveOrders;\nexport default ManagerActiveOrders;\nvar _c;\n$RefreshReg$(_c, \"ManagerActiveOrders\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","ManagerLayout","FaPlus","FaEdit","FaTrashAlt","FaSearch","FaUpload","FaChevronDown","FaChevronRight","FaEllipsisV","FaCheckSquare","FaHistory","FaSort","FaSortUp","FaSortDown","jsxDEV","_jsxDEV","API_BASE_URL","process","env","REACT_APP_API_URL","ManagerActiveOrders","_s","navigate","orders","setOrders","loading","setLoading","error","setError","expandedRows","setExpandedRows","Set","openMenuId","setOpenMenuId","confirmModalState","setConfirmModalState","isOpen","orderId","type","searchTerm","setSearchTerm","sortConfig","setSortConfig","key","direction","searchQuery","setSearchQuery","fetchActiveOrders","params","URLSearchParams","append","queryString","toString","response","fetch","ok","Error","status","data","json","ordersWithItemsArray","map","order","items","e","console","handleRowClick","prevExpandedRows","newExpandedRows","has","delete","add","handleMenuToggle","stopPropagation","prevId","handleClickOutside","event","target","closest","document","addEventListener","removeEventListener","handleEdit","log","handleDeleteClick","handleMarkCompleteClick","handleConfirmAction","method","prevOrders","filter","id","prev","newSet","headers","body","JSON","stringify","completed","err","handleCancelAction","handleSearchChange","newSearchTerm","value","handleSearchSubmit","preventDefault","trim","handleSort","getSortIcon","className","fileName","_jsxFileName","lineNumber","columnNumber","pageTitle","children","to","title","onSubmit","placeholder","onChange","style","marginBottom","width","onClick","length","isExpanded","isMenuOpen","Fragment","customer","name","Date","date","toLocaleDateString","parseFloat","total","toFixed","colSpan","item","index","quantity","weight","price","amount","notes","textAlign","fontStyle","padding","_c","$RefreshReg$"],"sources":["/Users/christiansarmiento/Documents/GitHub/Atlas-V2/client/src/pages/ManagerActiveOrders.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport ManagerLayout from '../components/ManagerLayout';\nimport '../styles/Table.css'; // Shared table styles\nimport '../styles/Modal.css'; // Import Modal styles\nimport { FaPlus, FaEdit, FaTrashAlt, FaSearch, FaUpload, FaChevronDown, FaChevronRight, FaEllipsisV, FaCheckSquare, FaHistory, FaSort, FaSortUp, FaSortDown } from 'react-icons/fa';\n\n// Base URL for the API (Consider moving this to a config file)\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\n\nfunction ManagerActiveOrders() {\n  const navigate = useNavigate();\n  const [orders, setOrders] = useState([]); // Initialize with empty array\n  const [loading, setLoading] = useState(true); // Add loading state\n  const [error, setError] = useState(null); // Add error state\n  const [expandedRows, setExpandedRows] = useState(new Set());\n  const [openMenuId, setOpenMenuId] = useState(null); // Track which menu is open\n  const [confirmModalState, setConfirmModalState] = useState({ isOpen: false, orderId: null, type: null }); // Added type for modal reuse\n\n  // State for search and sort\n  const [searchTerm, setSearchTerm] = useState('');\n  const [sortConfig, setSortConfig] = useState({ key: 'date', direction: 'DESC' });\n  const [searchQuery, setSearchQuery] = useState(''); // For triggering search fetch\n\n  // --- Fetch Active Orders ---\n  useEffect(() => {\n    const fetchActiveOrders = async () => {\n      setLoading(true);\n      setError(null);\n      // Construct query parameters\n      const params = new URLSearchParams();\n      if (searchQuery) {\n        params.append('searchCustomer', searchQuery);\n      }\n      if (sortConfig.key) {\n        params.append('sortBy', sortConfig.key);\n        params.append('sortDir', sortConfig.direction);\n      }\n      const queryString = params.toString();\n\n      try {\n        const response = await fetch(`${API_BASE_URL}/orders/active?${queryString}`);\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        const ordersWithItemsArray = data.map(order => ({\n            ...order,\n            items: order.items || []\n        }));\n        setOrders(ordersWithItemsArray);\n      } catch (e) {\n        console.error(\"Failed to fetch active orders:\", e);\n        setError(\"Failed to load active orders. Please try again later.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchActiveOrders();\n    // Re-fetch when searchQuery or sortConfig changes\n  }, [searchQuery, sortConfig]);\n\n  // --- Row Expansion ---\n  const handleRowClick = (orderId) => {\n     // Close menu if clicking on a row\n    if (openMenuId !== null) {\n        setOpenMenuId(null);\n    }\n    setExpandedRows(prevExpandedRows => {\n      const newExpandedRows = new Set(prevExpandedRows);\n      if (newExpandedRows.has(orderId)) {\n        newExpandedRows.delete(orderId);\n      } else {\n        newExpandedRows.add(orderId);\n      }\n      return newExpandedRows;\n    });\n  };\n\n  // --- Actions Menu ---\n  const handleMenuToggle = (e, orderId) => {\n    e.stopPropagation(); // Prevent row click when clicking dots\n    setOpenMenuId(prevId => (prevId === orderId ? null : orderId));\n    // Close expanded row if opening menu for it\n    if (expandedRows.has(orderId) && openMenuId !== orderId) {\n        handleRowClick(orderId);\n    }\n  };\n\n  // Close menu if clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      // Check if the click is outside the menu container\n      if (openMenuId !== null && !event.target.closest(`.action-menu-container[data-order-id=\"${openMenuId}\"]`)) {\n        setOpenMenuId(null);\n      }\n    };\n    document.addEventListener('click', handleClickOutside);\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, [openMenuId]);\n\n  // --- Action Handlers ---\n  const handleEdit = (e, orderId) => {\n    e.stopPropagation();\n    setOpenMenuId(null); // Close menu\n    console.log(`Navigating to edit order: ${orderId}`);\n    navigate(`/orders/edit/${orderId}`); // Navigate to the edit route\n  };\n\n  const handleDeleteClick = (e, orderId) => {\n    e.stopPropagation();\n    setOpenMenuId(null); // Close menu\n    setConfirmModalState({ isOpen: true, orderId: orderId, type: 'delete' }); // Open modal for deletion\n  };\n\n  const handleMarkCompleteClick = (e, orderId) => {\n    e.stopPropagation();\n    setOpenMenuId(null); // Close menu\n    setConfirmModalState({ isOpen: true, orderId: orderId, type: 'complete' }); // Open modal for completion\n  };\n\n  // --- Modal Handlers ---\n  const handleConfirmAction = async () => {\n    const { orderId, type } = confirmModalState;\n    if (!orderId || !type) return;\n\n    // Close modal immediately\n    setConfirmModalState({ isOpen: false, orderId: null, type: null });\n\n    try {\n      let response;\n      if (type === 'delete') {\n        console.log(`Deleting order: ${orderId}`);\n        response = await fetch(`${API_BASE_URL}/orders/${orderId}`, {\n          method: 'DELETE',\n        });\n        if (!response.ok) {\n          throw new Error(`Failed to delete order ${orderId}. Status: ${response.status}`);\n        }\n        // Remove from state on successful deletion\n        setOrders(prevOrders => prevOrders.filter(order => order.id !== orderId));\n        // Also remove from expanded rows if it was expanded\n        setExpandedRows(prev => {\n            const newSet = new Set(prev);\n            newSet.delete(orderId);\n            return newSet;\n        });\n\n      } else if (type === 'complete') {\n        console.log(`Marking order ${orderId} complete.`);\n        response = await fetch(`${API_BASE_URL}/orders/${orderId}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ completed: true }), // Send update data\n        });\n        if (!response.ok) {\n          throw new Error(`Failed to mark order ${orderId} as complete. Status: ${response.status}`);\n        }\n        // Remove from active orders list visually\n        setOrders(prevOrders => prevOrders.filter(order => order.id !== orderId));\n         // Also remove from expanded rows\n        setExpandedRows(prev => {\n            const newSet = new Set(prev);\n            newSet.delete(orderId);\n            return newSet;\n        });\n      }\n    } catch (err) {\n      console.error(`Error during ${type} action for order ${orderId}:`, err);\n      setError(`Failed to ${type} order ${orderId}. Please try again.`); // Display error to user\n      // Optionally refetch data here if needed to reset state on error\n    }\n  };\n\n  const handleCancelAction = () => {\n    setConfirmModalState({ isOpen: false, orderId: null, type: null }); // Close modal\n  };\n\n  // --- Search Handler ---\n  const handleSearchChange = (event) => {\n    const newSearchTerm = event.target.value;\n    setSearchTerm(newSearchTerm);\n    // If the search term is cleared, immediately reset the search query to show all orders\n    if (newSearchTerm === '') {\n      setSearchQuery('');\n    }\n  };\n\n  const handleSearchSubmit = (event) => {\n    event.preventDefault(); // Prevent page reload if inside a form\n    // Only trigger search if the term is not empty\n    if (searchTerm.trim() !== '') {\n        setSearchQuery(searchTerm);\n    }\n     // Optional: if search term is empty on submit, also clear results\n    // else {\n    //     setSearchQuery(''); \n    // }\n  };\n\n  // --- Sort Handler ---\n  const handleSort = (key) => {\n    let direction = 'ASC';\n    if (sortConfig.key === key && sortConfig.direction === 'ASC') {\n      direction = 'DESC';\n    }\n    setSortConfig({ key, direction });\n  };\n\n  // Helper function to get sort icon\n  const getSortIcon = (key) => {\n    if (sortConfig.key !== key) {\n      return <FaSort className=\"sort-icon\" />; // Default icon\n    }\n    if (sortConfig.direction === 'ASC') {\n      return <FaSortUp className=\"sort-icon active\" />;\n    }\n    return <FaSortDown className=\"sort-icon active\" />;\n  };\n\n  // --- Render Logic ---\n  if (loading) {\n    return <ManagerLayout pageTitle=\"Active Orders\"><div className=\"loading-indicator\">Loading active orders...</div></ManagerLayout>;\n  }\n\n  // Display error message if loading fails\n   if (error) {\n      return (\n          <ManagerLayout pageTitle=\"Active Orders\">\n              <div className=\"error-message\">{error}</div>\n              {/* Optionally add a retry button */}\n          </ManagerLayout>\n      );\n   }\n\n  return (\n    <ManagerLayout pageTitle=\"Active Orders\">\n      <div className=\"page-actions-bar\">\n        <div className=\"page-actions-left\">\n            <Link to=\"/orders/new\" className=\"button button-primary\">\n                <FaPlus /> New Invoice\n            </Link>\n            <Link to=\"/orders/completed\" className=\"button button-secondary\" title=\"View Completed Orders\">\n                <FaHistory /> Completed\n            </Link>\n        </div>\n        <div className=\"page-actions-right\">\n             <form onSubmit={handleSearchSubmit} className=\"search-bar\">\n                <input \n                    type=\"text\" \n                    placeholder=\"Search by Customer...\" \n                    value={searchTerm}\n                    onChange={handleSearchChange}\n                 />\n                <button type=\"submit\" className=\"icon-button\"><FaSearch /></button>\n            </form>\n        </div>\n      </div>\n\n      {/* Display general error messages here if needed */}\n       {error && !loading && <div className=\"error-message\" style={{ marginBottom: '15px' }}>{error}</div>}\n\n\n      <table className=\"data-table main-table\">\n        <thead>\n          <tr>\n            <th style={{ width: '30px' }}></th>{/* Expand Icon */}\n            <th>Invoice #</th>\n            <th>Customer</th>\n            <th onClick={() => handleSort('date')} className=\"sortable-header\">\n                Date {getSortIcon('date')}\n            </th>\n            <th onClick={() => handleSort('total')} className=\"sortable-header\">\n                Total {getSortIcon('total')}\n            </th>\n            <th style={{ width: '50px' }}></th>{/* Actions Menu */}\n          </tr>\n        </thead>\n        <tbody>\n          {orders.length > 0 ? orders.map((order) => {\n            const isExpanded = expandedRows.has(order.id);\n            const isMenuOpen = openMenuId === order.id;\n\n            return (\n              <React.Fragment key={order.id}>\n                {/* Main Order Row */}\n                {/* Add data-order-id to the container for click outside detection */}\n                <tr onClick={() => handleRowClick(order.id)} className={`clickable-row ${isExpanded ? 'expanded' : ''}`}>\n                  <td className=\"expand-icon-cell\">\n                    {order.items && order.items.length > 0 ? (isExpanded ? <FaChevronDown /> : <FaChevronRight />) : ''} {/* Only show icon if items exist */}\n                  </td>\n                  <td>{order.id}</td>\n                  {/* Use customer name from the included association */}\n                  <td>{order.customer ? order.customer.name : 'N/A'}</td>\n                  {/* Format date if needed */}\n                  <td>{new Date(order.date).toLocaleDateString()}</td>\n                  <td>${parseFloat(order.total || 0).toFixed(2)}</td>\n                  {/* Actions Cell */}\n                  {/* Add data-order-id here too */}\n                  <td className=\"action-cell action-menu-container\" data-order-id={order.id}>\n                     <button onClick={(e) => handleMenuToggle(e, order.id)} className=\"icon-button menu-dots-button\">\n                      <FaEllipsisV />\n                    </button>\n                    {/* Action Menu Dropdown */}\n                    {isMenuOpen && (\n                      <div className=\"action-menu\">\n                        <button onClick={(e) => handleEdit(e, order.id)}><FaEdit /> Edit</button>\n                        <button onClick={(e) => handleDeleteClick(e, order.id)} className=\"danger\"><FaTrashAlt /> Delete</button>\n                        <button onClick={(e) => handleMarkCompleteClick(e, order.id)}><FaCheckSquare /> Mark Complete</button>\n                      </div>\n                    )}\n                  </td>\n                </tr>\n\n                {/* Collapsible Row with Nested Table */}\n                {isExpanded && order.items && order.items.length > 0 && (\n                   <tr className=\"collapsible-row\">\n                    <td></td> {/* Spacer for expand icon */}\n                    <td colSpan=\"5\"> {/* Span across remaining cols + actions col */}\n                      <div className=\"nested-table-container\">\n                        <table className=\"data-table nested-table\">\n                          <thead>\n                             <tr>\n                               <th>Quantity</th>\n                               <th>Item</th> {/* Changed from Description */}\n                               <th>Weight</th>\n                               <th>Price</th>\n                               <th>Amount</th>\n                               <th>Notes</th> {/* Added Notes */}\n                             </tr>\n                          </thead>\n                          <tbody>\n                          {order.items.map((item, index) => (\n                             <tr key={`${order.id}-item-${item.id || index}`}> {/* Use item.id if available */}\n                               <td>{item.quantity}</td>\n                               <td>{item.item}</td> {/* Use item field */}\n                               <td>{item.weight ? item.weight : '-'}</td>\n                               <td>${parseFloat(item.price || 0).toFixed(2)}</td>\n                               <td>${parseFloat(item.amount || 0).toFixed(2)}</td>\n                               <td>{item.notes || '-'}</td> {/* Display notes */}\n                             </tr>\n                              ))}\n                           </tbody>\n                        </table>\n                      </div>\n                    </td>\n                  </tr>\n                )}\n                 {/* Handle case where row expanded but no items */}\n                 {isExpanded && (!order.items || order.items.length === 0) && (\n                     <tr className=\"collapsible-row no-items-row\">\n                         <td></td>\n                         <td colSpan=\"5\" style={{ textAlign: 'center', fontStyle: 'italic', padding: '10px' }}>\n                             No items associated with this order.\n                         </td>\n                     </tr>\n                 )}\n              </React.Fragment>\n            );\n          }) : (\n             <tr>\n                <td colSpan=\"6\" style={{ textAlign: 'center', padding: '20px', fontStyle: 'italic' }}>No active orders found matching your criteria.</td>\n             </tr>\n          )}\n        </tbody>\n      </table>\n\n      {/* Confirmation Modal */}\n      {confirmModalState.isOpen && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <h4>Confirm Action</h4>\n            <p>\n              {confirmModalState.type === 'delete'\n                ? `Are you sure you want to delete Invoice #${confirmModalState.orderId}? This action cannot be undone.`\n                : `Are you sure you want to mark Invoice #${confirmModalState.orderId} as complete?`}\n            </p>\n            <div className=\"modal-actions\">\n              <button onClick={handleCancelAction} className=\"button button-secondary\">\n                Cancel\n              </button>\n              <button\n                onClick={handleConfirmAction}\n                className={`button ${confirmModalState.type === 'delete' ? 'button-danger' : 'button-primary'}`}\n              >\n                {confirmModalState.type === 'delete' ? 'Delete Invoice' : 'Mark Complete'}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </ManagerLayout>\n  );\n}\n\nexport default ManagerActiveOrders; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}