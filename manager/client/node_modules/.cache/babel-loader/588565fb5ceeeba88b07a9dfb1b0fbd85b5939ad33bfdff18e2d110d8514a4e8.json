{"ast":null,"code":"var _jsxFileName = \"/Users/christiansarmiento/Documents/GitHub/Atlas-V2/client/src/pages/ManagerNewInvoice.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport ManagerLayout from '../components/ManagerLayout';\nimport { FaPlus, FaTrashAlt } from 'react-icons/fa';\nimport '../styles/InvoiceForm.css';\n\n// Base URL for the API (Consider moving this to a config file)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\n\n// Function to get formatted date yyyy-mm-dd\nconst getFormattedDate = (date = new Date()) => {\n  return date.toISOString().split('T')[0];\n};\nfunction ManagerNewInvoice() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    orderId\n  } = useParams(); // orderId will be undefined when creating new\n  const isEditing = Boolean(orderId);\n\n  // State for form fields\n  const [customerName, setCustomerName] = useState(''); // Changed from customerId\n  const [customerPhone, setCustomerPhone] = useState(''); // Add state for phone display\n  const [invoiceDate, setInvoiceDate] = useState(getFormattedDate());\n  const [items, setItems] = useState([]);\n  const [total, setTotal] = useState(0);\n\n  // State for managing related data (customers - maybe for suggestions later)\n  // const [customers, setCustomers] = useState([]);\n\n  // State for UI control\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [invoiceNumber, setInvoiceNumber] = useState(isEditing ? orderId : 'Auto-Generated'); // For display\n\n  // --- Remove Customer Fetching - No longer needed for select ---\n  // useEffect(() => {\n  //   // ... customer fetching logic removed ...\n  // }, []);\n\n  // --- Fetch Order Data if Editing (Not implemented yet) ---\n  useEffect(() => {\n    if (isEditing) {\n      // TODO: Implement fetching existing order data for editing\n      console.warn(\"Edit mode not fully implemented yet. Fetching existing order data is required.\");\n      setError(\"Editing existing invoices is not yet supported.\");\n      setIsLoading(false);\n      // When implemented, fetch the order by orderId, populate customerName, invoiceDate, items, total\n    } else {\n      // Start with one empty row for new invoice\n      setItems([{\n        id: Date.now(),\n        quantity: '',\n        item: '',\n        weight: '',\n        price: '',\n        notes: '',\n        amount: 0\n      }]);\n    }\n    // Removed 'customers' dependency\n  }, [orderId, isEditing]);\n\n  // --- Item Management ---\n  const addItemRow = () => {\n    const newId = Date.now() + Math.random(); // Add randomness for better uniqueness\n    setItems([...items, {\n      id: newId,\n      quantity: '',\n      item: '',\n      weight: '',\n      price: '',\n      notes: '',\n      amount: 0\n    }]);\n  };\n  const handleItemChange = (id, field, value) => {\n    setItems(prevItems => {\n      return prevItems.map(item => {\n        if (item.id === id) {\n          const newItem = {\n            ...item,\n            [field]: value\n          };\n          // Recalculate amount if quantity or price changes\n          if (field === 'quantity' || field === 'price') {\n            const quantity = parseFloat(newItem.quantity) || 0;\n            const price = parseFloat(newItem.price) || 0;\n            newItem.amount = quantity * price;\n          }\n          return newItem;\n        }\n        return item;\n      });\n    });\n  };\n  const removeItemRow = id => {\n    setItems(prevItems => prevItems.filter(item => item.id !== id));\n  };\n\n  // Calculate total whenever items change\n  useEffect(() => {\n    const newTotal = items.reduce((sum, item) => {\n      const amount = parseFloat(item.amount) || 0;\n      return sum + amount;\n    }, 0);\n    setTotal(newTotal);\n  }, [items]);\n\n  // --- Customer Name Input Handler ---\n  const handleCustomerNameChange = event => {\n    setCustomerName(event.target.value);\n    // Clear phone if name changes - phone is not directly editable now\n    setCustomerPhone('');\n  };\n\n  // --- Form Submission/Cancellation Handlers ---\n  const handleSave = async event => {\n    event.preventDefault(); // Prevent default form submission\n    setError(null); // Clear previous errors\n    setSuccessMessage(null);\n    setIsLoading(true);\n\n    // Basic Validation\n    if (!customerName.trim()) {\n      // Check trimmed name\n      setError('Please enter a customer name.');\n      setIsLoading(false);\n      return;\n    }\n    if (items.length === 0) {\n      setError('Please add at least one item to the invoice.');\n      setIsLoading(false);\n      return;\n    }\n    if (items.some(item => !item.item || !item.quantity || !item.price)) {\n      setError('Please ensure all items have at least a description, quantity, and price.');\n      setIsLoading(false);\n      return;\n    }\n\n    // Prepare payload for the API - Sending customerName now\n    const invoicePayload = {\n      customerName: customerName.trim(),\n      // Send trimmed name\n      date: invoiceDate,\n      total: total,\n      // Map items (unchanged)\n      items: items.map(({\n        id,\n        ...rest\n      }) => ({\n        ...rest,\n        quantity: parseFloat(rest.quantity) || 0,\n        price: parseFloat(rest.price) || 0,\n        amount: parseFloat(rest.amount) || 0,\n        weight: rest.weight ? parseFloat(rest.weight) : null\n      })),\n      checked_out: false,\n      paid: false,\n      completed: false\n    };\n    try {\n      let response;\n      let responseData;\n      if (isEditing) {\n        // TODO: Implement Update logic\n        console.log(`UPDATING Invoice ${orderId}:`, invoicePayload);\n        setError(\"Updating invoices is not yet implemented.\");\n      } else {\n        console.log(\"SAVING New Invoice:\", invoicePayload);\n        response = await fetch(`${API_BASE_URL}/orders`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(invoicePayload)\n        });\n        if (!response.ok) {\n          // Try to parse error message from backend\n          let errorMsg = `Failed to create invoice. Status: ${response.status} ${response.statusText}`;\n          try {\n            const errorBody = await response.json(); // Assume backend sends JSON error object\n            errorMsg = errorBody.message || errorMsg; // Use message field if available\n          } catch (parseError) {\n            // If parsing fails, use the default message\n            console.error(\"Could not parse error response body\");\n          }\n          throw new Error(errorMsg);\n        }\n        responseData = await response.json();\n        setSuccessMessage(`Invoice #${responseData.id} created successfully!`);\n        setInvoiceNumber(responseData.id); // Update displayed invoice number\n        // Disable form fields after successful save?\n        setTimeout(() => navigate('/orders'), 2000); // Redirect to active orders after 2s\n      }\n    } catch (err) {\n      console.error(\"Error saving invoice:\", err);\n      setError(err.message || 'An unexpected error occurred while saving the invoice.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleCancel = () => {\n    navigate('/orders'); // Navigate back to active orders\n  };\n\n  // --- Render Logic --- \n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(ManagerLayout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading invoice data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 14\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(ManagerLayout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red',\n          padding: '20px'\n        },\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 30\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 15\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(ManagerLayout, {\n    pageTitle: isEditing ? `Edit Invoice #${invoiceNumber}` : 'New Invoice',\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSave,\n      className: \"invoice-form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"invoice-form-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: isEditing ? `Edit Invoice #${invoiceNumber}` : 'New Invoice'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invoice-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"button button-primary\",\n            disabled: isLoading,\n            children: isLoading ? 'Saving...' : 'Save Invoice'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleCancel,\n            className: \"button button-secondary\",\n            disabled: isLoading,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-indicator\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 23\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 19\n      }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-message\",\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"invoice-meta\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"meta-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"customerNameInput\",\n            children: \"Customer Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"customerNameInput\" // Changed ID\n            ,\n            value: customerName,\n            onChange: handleCustomerNameChange,\n            placeholder: \"Type customer name...\",\n            required: true,\n            disabled: isEditing // Disable if editing for now\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 18\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"meta-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"customerPhoneDisplay\",\n            children: \"Phone:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"tel\",\n            id: \"customerPhoneDisplay\" // Changed ID\n            ,\n            value: customerPhone // Display value (currently not functional for display)\n            ,\n            readOnly: true // Phone is not directly editable here\n            ,\n            placeholder: \"(Auto-filled if found)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"meta-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Invoice #:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 18\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"invoice-number\",\n            children: invoiceNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 18\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"meta-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"invoiceDate\",\n            children: \"Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"invoiceDate\",\n            value: invoiceDate,\n            onChange: e => setInvoiceDate(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"invoice-items-section scrollable\",\n        children: [/*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"data-table invoice-items-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Quantity*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Item Description*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Weight\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Unit Price*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Notes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  width: '50px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: items.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  step: \"any\",\n                  value: item.quantity,\n                  onChange: e => handleItemChange(item.id, 'quantity', e.target.value),\n                  placeholder: \"0\",\n                  required: true,\n                  className: \"input-narrow\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: item.item,\n                  onChange: e => handleItemChange(item.id, 'item', e.target.value),\n                  placeholder: \"Item description\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  step: \"any\",\n                  value: item.weight,\n                  onChange: e => handleItemChange(item.id, 'weight', e.target.value),\n                  placeholder: \"Optional\",\n                  className: \"input-narrow\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  step: \"0.01\",\n                  value: item.price,\n                  onChange: e => handleItemChange(item.id, 'price', e.target.value),\n                  placeholder: \"0.00\",\n                  required: true,\n                  className: \"input-narrow\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"amount-cell\",\n                children: [\"$\", (parseFloat(item.amount) || 0).toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: item.notes,\n                  onChange: e => handleItemChange(item.id, 'notes', e.target.value),\n                  placeholder: \"Optional notes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 24\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 20\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"action-cell\",\n                children: (items.length > 1 || isEditing) && /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: () => removeItemRow(item.id),\n                  className: \"icon-button danger\",\n                  title: \"Remove Item\",\n                  children: /*#__PURE__*/_jsxDEV(FaTrashAlt, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 137\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 19\n              }, this)]\n            }, item.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: addItemRow,\n          className: \"button add-item-button\",\n          disabled: isLoading,\n          children: [/*#__PURE__*/_jsxDEV(FaPlus, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this), \" Add Item\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"invoice-total\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"TOTAL:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"$\", total.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 5\n  }, this);\n}\n_s(ManagerNewInvoice, \"qdRt+48ZEEPqLlCCtbzFhPEoOAY=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = ManagerNewInvoice;\nexport default ManagerNewInvoice;\nvar _c;\n$RefreshReg$(_c, \"ManagerNewInvoice\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","ManagerLayout","FaPlus","FaTrashAlt","jsxDEV","_jsxDEV","API_BASE_URL","process","env","REACT_APP_API_URL","getFormattedDate","date","Date","toISOString","split","ManagerNewInvoice","_s","navigate","orderId","isEditing","Boolean","customerName","setCustomerName","customerPhone","setCustomerPhone","invoiceDate","setInvoiceDate","items","setItems","total","setTotal","isLoading","setIsLoading","error","setError","successMessage","setSuccessMessage","invoiceNumber","setInvoiceNumber","console","warn","id","now","quantity","item","weight","price","notes","amount","addItemRow","newId","Math","random","handleItemChange","field","value","prevItems","map","newItem","parseFloat","removeItemRow","filter","newTotal","reduce","sum","handleCustomerNameChange","event","target","handleSave","preventDefault","trim","length","some","invoicePayload","rest","checked_out","paid","completed","response","responseData","log","fetch","method","headers","body","JSON","stringify","ok","errorMsg","status","statusText","errorBody","json","message","parseError","Error","setTimeout","err","handleCancel","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","padding","pageTitle","onSubmit","className","type","disabled","onClick","htmlFor","onChange","placeholder","required","readOnly","e","width","index","step","toFixed","title","_c","$RefreshReg$"],"sources":["/Users/christiansarmiento/Documents/GitHub/Atlas-V2/client/src/pages/ManagerNewInvoice.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport ManagerLayout from '../components/ManagerLayout';\nimport { FaPlus, FaTrashAlt } from 'react-icons/fa';\nimport '../styles/InvoiceForm.css';\n\n// Base URL for the API (Consider moving this to a config file)\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\n\n// Function to get formatted date yyyy-mm-dd\nconst getFormattedDate = (date = new Date()) => {\n  return date.toISOString().split('T')[0];\n};\n\nfunction ManagerNewInvoice() {\n  const navigate = useNavigate();\n  const { orderId } = useParams(); // orderId will be undefined when creating new\n  const isEditing = Boolean(orderId);\n\n  // State for form fields\n  const [customerName, setCustomerName] = useState(''); // Changed from customerId\n  const [customerPhone, setCustomerPhone] = useState(''); // Add state for phone display\n  const [invoiceDate, setInvoiceDate] = useState(getFormattedDate());\n  const [items, setItems] = useState([]);\n  const [total, setTotal] = useState(0);\n\n  // State for managing related data (customers - maybe for suggestions later)\n  // const [customers, setCustomers] = useState([]);\n\n  // State for UI control\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [invoiceNumber, setInvoiceNumber] = useState(isEditing ? orderId : 'Auto-Generated'); // For display\n\n  // --- Remove Customer Fetching - No longer needed for select ---\n  // useEffect(() => {\n  //   // ... customer fetching logic removed ...\n  // }, []);\n\n  // --- Fetch Order Data if Editing (Not implemented yet) ---\n  useEffect(() => {\n    if (isEditing) {\n        // TODO: Implement fetching existing order data for editing\n        console.warn(\"Edit mode not fully implemented yet. Fetching existing order data is required.\");\n        setError(\"Editing existing invoices is not yet supported.\");\n        setIsLoading(false);\n        // When implemented, fetch the order by orderId, populate customerName, invoiceDate, items, total\n    } else {\n        // Start with one empty row for new invoice\n        setItems([{ id: Date.now(), quantity: '', item: '', weight: '', price: '', notes: '', amount: 0 }]);\n    }\n    // Removed 'customers' dependency\n  }, [orderId, isEditing]);\n\n  // --- Item Management ---\n  const addItemRow = () => {\n    const newId = Date.now() + Math.random(); // Add randomness for better uniqueness\n    setItems([...items, { id: newId, quantity: '', item: '', weight: '', price: '', notes: '', amount: 0 }]);\n  };\n\n  const handleItemChange = (id, field, value) => {\n    setItems(prevItems => {\n      return prevItems.map(item => {\n        if (item.id === id) {\n          const newItem = { ...item, [field]: value };\n          // Recalculate amount if quantity or price changes\n          if (field === 'quantity' || field === 'price') {\n            const quantity = parseFloat(newItem.quantity) || 0;\n            const price = parseFloat(newItem.price) || 0;\n            newItem.amount = quantity * price;\n          }\n          return newItem;\n        }\n        return item;\n      });\n    });\n  };\n\n  const removeItemRow = (id) => {\n    setItems(prevItems => prevItems.filter(item => item.id !== id));\n  };\n\n  // Calculate total whenever items change\n  useEffect(() => {\n    const newTotal = items.reduce((sum, item) => {\n        const amount = parseFloat(item.amount) || 0;\n        return sum + amount;\n    }, 0);\n    setTotal(newTotal);\n  }, [items]);\n\n   // --- Customer Name Input Handler ---\n    const handleCustomerNameChange = (event) => {\n        setCustomerName(event.target.value);\n        // Clear phone if name changes - phone is not directly editable now\n        setCustomerPhone(''); \n    };\n\n  // --- Form Submission/Cancellation Handlers ---\n  const handleSave = async (event) => {\n    event.preventDefault(); // Prevent default form submission\n    setError(null); // Clear previous errors\n    setSuccessMessage(null);\n    setIsLoading(true);\n\n    // Basic Validation\n     if (!customerName.trim()) { // Check trimmed name\n       setError('Please enter a customer name.');\n       setIsLoading(false);\n       return;\n     }\n     if (items.length === 0) {\n         setError('Please add at least one item to the invoice.');\n         setIsLoading(false);\n         return;\n     }\n     if (items.some(item => !item.item || !item.quantity || !item.price)) {\n         setError('Please ensure all items have at least a description, quantity, and price.');\n         setIsLoading(false);\n         return;\n     }\n\n    // Prepare payload for the API - Sending customerName now\n    const invoicePayload = {\n      customerName: customerName.trim(), // Send trimmed name\n      date: invoiceDate,\n      total: total,\n      // Map items (unchanged)\n      items: items.map(({ id, ...rest }) => ({\n          ...rest,\n          quantity: parseFloat(rest.quantity) || 0,\n          price: parseFloat(rest.price) || 0,\n          amount: parseFloat(rest.amount) || 0,\n          weight: rest.weight ? parseFloat(rest.weight) : null,\n      })),\n      checked_out: false,\n      paid: false,\n      completed: false,\n    };\n\n    try {\n        let response;\n        let responseData;\n        if (isEditing) {\n            // TODO: Implement Update logic\n            console.log(`UPDATING Invoice ${orderId}:`, invoicePayload);\n            setError(\"Updating invoices is not yet implemented.\");\n        } else {\n            console.log(\"SAVING New Invoice:\", invoicePayload);\n            response = await fetch(`${API_BASE_URL}/orders`, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(invoicePayload),\n            });\n            if (!response.ok) {\n                // Try to parse error message from backend\n                let errorMsg = `Failed to create invoice. Status: ${response.status} ${response.statusText}`;\n                try {\n                    const errorBody = await response.json(); // Assume backend sends JSON error object\n                    errorMsg = errorBody.message || errorMsg; // Use message field if available\n                } catch (parseError) {\n                    // If parsing fails, use the default message\n                    console.error(\"Could not parse error response body\");\n                }\n                throw new Error(errorMsg);\n            }\n            responseData = await response.json();\n            setSuccessMessage(`Invoice #${responseData.id} created successfully!`);\n            setInvoiceNumber(responseData.id); // Update displayed invoice number\n            // Disable form fields after successful save?\n            setTimeout(() => navigate('/orders'), 2000); // Redirect to active orders after 2s\n        }\n\n    } catch (err) {\n        console.error(\"Error saving invoice:\", err);\n        setError(err.message || 'An unexpected error occurred while saving the invoice.');\n    } finally {\n        setIsLoading(false);\n    }\n  };\n\n  const handleCancel = () => {\n    navigate('/orders'); // Navigate back to active orders\n  };\n\n  // --- Render Logic --- \n  if (isLoading) {\n      return <ManagerLayout><div>Loading invoice data...</div></ManagerLayout>;\n  }\n\n  if (error) {\n       return <ManagerLayout><div style={{ color: 'red', padding: '20px' }}>Error: {error}</div></ManagerLayout>;\n  }\n\n  return (\n    <ManagerLayout pageTitle={isEditing ? `Edit Invoice #${invoiceNumber}` : 'New Invoice'}>\n      <form onSubmit={handleSave} className=\"invoice-form-container\">\n        <div className=\"invoice-form-header\">\n          <h2>{isEditing ? `Edit Invoice #${invoiceNumber}` : 'New Invoice'}</h2>\n          <div className=\"invoice-actions\">\n            {/* Disable save button while loading */}\n            <button type=\"submit\" className=\"button button-primary\" disabled={isLoading}>\n              {isLoading ? 'Saving...' : 'Save Invoice'}\n            </button>\n            <button type=\"button\" onClick={handleCancel} className=\"button button-secondary\" disabled={isLoading}>\n              Cancel\n            </button>\n          </div>\n        </div>\n\n        {/* Display Loading/Error/Success Messages */}\n        {isLoading && <div className=\"loading-indicator\">Loading...</div>}\n        {error && <div className=\"error-message\">Error: {error}</div>}\n        {successMessage && <div className=\"success-message\">{successMessage}</div>}\n\n        {/* Invoice Header Fields */}\n        <div className=\"invoice-meta\">\n            <div className=\"meta-item\">\n                <label htmlFor=\"customerNameInput\">Customer Name:</label>\n                 <input\n                     type=\"text\"\n                     id=\"customerNameInput\" // Changed ID\n                     value={customerName}\n                     onChange={handleCustomerNameChange}\n                     placeholder=\"Type customer name...\"\n                     required\n                     disabled={isEditing} // Disable if editing for now\n                 />\n            </div>\n            <div className=\"meta-item\">\n                <label htmlFor=\"customerPhoneDisplay\">Phone:</label>\n                <input\n                    type=\"tel\"\n                    id=\"customerPhoneDisplay\" // Changed ID\n                    value={customerPhone} // Display value (currently not functional for display)\n                    readOnly // Phone is not directly editable here\n                    placeholder=\"(Auto-filled if found)\"\n                />\n            </div>\n             <div className=\"meta-item\">\n                 <label>Invoice #:</label>\n                 <span className=\"invoice-number\">{invoiceNumber}</span>\n             </div>\n            <div className=\"meta-item\">\n                <label htmlFor=\"invoiceDate\">Date:</label>\n                <input\n                    type=\"date\"\n                    id=\"invoiceDate\"\n                    value={invoiceDate}\n                    onChange={(e) => setInvoiceDate(e.target.value)}\n                    required\n                />\n            </div>\n        </div>\n\n        {/* Invoice Items Table */}\n        <div className=\"invoice-items-section scrollable\">\n          <table className=\"data-table invoice-items-table\">\n            <thead>\n              <tr>\n                <th>Quantity*</th>\n                <th>Item Description*</th>\n                <th>Weight</th>\n                <th>Unit Price*</th>\n                <th>Amount</th>\n                <th>Notes</th>\n                <th style={{width: '50px'}}></th>\n              </tr>\n            </thead>\n            <tbody>\n              {items.map((item, index) => (\n                <tr key={item.id}>\n                  <td><input type=\"number\" step=\"any\" value={item.quantity} onChange={(e) => handleItemChange(item.id, 'quantity', e.target.value)} placeholder=\"0\" required className=\"input-narrow\" /></td>\n                  <td><input type=\"text\" value={item.item} onChange={(e) => handleItemChange(item.id, 'item', e.target.value)} placeholder=\"Item description\" required /></td>\n                  <td><input type=\"number\" step=\"any\" value={item.weight} onChange={(e) => handleItemChange(item.id, 'weight', e.target.value)} placeholder=\"Optional\" className=\"input-narrow\" /></td>\n                  <td><input type=\"number\" step=\"0.01\" value={item.price} onChange={(e) => handleItemChange(item.id, 'price', e.target.value)} placeholder=\"0.00\" required className=\"input-narrow\"/></td>\n                  <td className=\"amount-cell\">${(parseFloat(item.amount) || 0).toFixed(2)}</td>\n                   <td><input type=\"text\" value={item.notes} onChange={(e) => handleItemChange(item.id, 'notes', e.target.value)} placeholder=\"Optional notes\" /></td>\n                  <td className=\"action-cell\">\n                    {/* Always allow removing if more than one item, or if editing */}\n                    {(items.length > 1 || isEditing) && (\n                        <button type=\"button\" onClick={() => removeItemRow(item.id)} className=\"icon-button danger\" title=\"Remove Item\"><FaTrashAlt /></button>\n                    )}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n          <button type=\"button\" onClick={addItemRow} className=\"button add-item-button\" disabled={isLoading}>\n            <FaPlus /> Add Item\n          </button>\n        </div>\n\n        {/* Invoice Total */}\n        <div className=\"invoice-total\">\n          <span>TOTAL:</span>\n          <span>${total.toFixed(2)}</span>\n        </div>\n\n      </form>\n    </ManagerLayout>\n  );\n}\n\nexport default ManagerNewInvoice; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}