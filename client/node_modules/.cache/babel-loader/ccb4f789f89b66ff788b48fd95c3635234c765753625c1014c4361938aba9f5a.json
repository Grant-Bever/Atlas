{"ast":null,"code":"var _jsxFileName = \"/Users/christiansarmiento/Documents/GitHub/Atlas-V2/client/src/pages/ManagerNewInvoice.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport ManagerLayout from '../components/ManagerLayout';\nimport { FaPlus, FaTrashAlt } from 'react-icons/fa';\nimport '../styles/InvoiceForm.css';\n\n// Function to get formatted date yyyy-mm-dd\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getFormattedDate = (date = new Date()) => {\n  return date.toISOString().split('T')[0];\n};\n\n// --- Sample Data Fetching (Replace with actual API call) ---\n// This is just for demonstration purposes. In a real app, \n// you would fetch this from your backend based on orderId.\nconst fetchOrderData = orderId => {\n  console.log(\"Fetching data for order ID:\", orderId);\n  // Simulate finding order data (replace with actual API call)\n  const allOrders = [{\n    id: 112,\n    customerName: 'Michoacano',\n    customerPhone: '123-456-7890',\n    invoiceDate: '2024-06-18',\n    total: 457.00,\n    items: [{\n      id: 1,\n      quantity: 5,\n      description: 'Ribeye Steak',\n      weight: 15,\n      price: 8.99,\n      amount: 134.85\n    } /* ... more items */]\n  }, {\n    id: 113,\n    customerName: 'Mosner',\n    customerPhone: '987-654-3210',\n    invoiceDate: '2024-06-19',\n    total: 160.00,\n    items: [{\n      id: 1,\n      quantity: 10,\n      description: 'Chicken Wings',\n      weight: 10,\n      price: 2.50,\n      amount: 25.00\n    } /* ... more items */]\n  }\n  // ... add other sample orders if needed for testing edit\n  ];\n  const numericOrderId = parseInt(orderId, 10);\n  const foundOrder = allOrders.find(order => order.id === numericOrderId);\n  console.log(\"Found Order:\", foundOrder);\n  return foundOrder ? Promise.resolve(foundOrder) : Promise.resolve(null);\n};\n// --- End Sample Data Fetching ---\n\nfunction ManagerNewInvoice() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    orderId\n  } = useParams();\n  const isEditing = Boolean(orderId);\n  const [customerName, setCustomerName] = useState('');\n  const [customerPhone, setCustomerPhone] = useState('');\n  const [invoiceDate, setInvoiceDate] = useState(getFormattedDate());\n  const [items, setItems] = useState([\n    // Start with one empty item row only if creating new\n    // { id: 1, quantity: '', description: '', weight: '', price: '', amount: 0 },\n  ]);\n  const [total, setTotal] = useState(0);\n  const [isLoading, setIsLoading] = useState(isEditing);\n  const [error, setError] = useState(null);\n\n  // Fetch data if in edit mode\n  useEffect(() => {\n    if (isEditing) {\n      setIsLoading(true);\n      fetchOrderData(orderId).then(data => {\n        if (data) {\n          setCustomerName(data.customerName || '');\n          setCustomerPhone(data.customerPhone || '');\n          setInvoiceDate(data.invoiceDate ? getFormattedDate(new Date(data.invoiceDate)) : getFormattedDate());\n          setItems(data.items.map((item, index) => ({\n            ...item,\n            id: item.id || Date.now() + index\n          })) || []);\n          setTotal(data.total || 0);\n        } else {\n          setError('Order not found.');\n        }\n      }).catch(err => {\n        console.error(\"Error fetching order data:\", err);\n        setError('Failed to load order data.');\n      }).finally(() => {\n        setIsLoading(false);\n      });\n    } else {\n      // Start with one empty row if creating a new invoice\n      setItems([{\n        id: Date.now(),\n        quantity: '',\n        description: '',\n        weight: '',\n        price: '',\n        amount: 0\n      }]);\n    }\n  }, [orderId, isEditing]);\n\n  // Function to add a new item row\n  const addItemRow = () => {\n    const newId = Date.now();\n    setItems([...items, {\n      id: newId,\n      quantity: '',\n      description: '',\n      weight: '',\n      price: '',\n      amount: 0\n    }]);\n  };\n\n  // Function to handle changes in item rows\n  const handleItemChange = (id, field, value) => {\n    setItems(prevItems => {\n      return prevItems.map(item => {\n        if (item.id === id) {\n          const newItem = {\n            ...item,\n            [field]: value\n          };\n          if (field === 'quantity' || field === 'price') {\n            const quantity = parseFloat(newItem.quantity) || 0;\n            const price = parseFloat(newItem.price) || 0;\n            newItem.amount = quantity * price;\n          }\n          return newItem;\n        }\n        return item;\n      });\n    });\n  };\n\n  // Function to remove an item row\n  const removeItemRow = id => {\n    setItems(prevItems => prevItems.filter(item => item.id !== id));\n  };\n\n  // Calculate total whenever items change\n  useEffect(() => {\n    const newTotal = items.reduce((sum, item) => sum + (item.amount || 0), 0);\n    setTotal(newTotal);\n  }, [items]);\n\n  // --- Form Submission/Cancellation Handlers ---\n  const handleSave = () => {\n    const invoicePayload = {\n      customerName,\n      customerPhone,\n      invoiceDate,\n      items: items.map(({\n        id,\n        ...rest\n      }) => rest),\n      total\n    };\n    if (isEditing) {\n      console.log(`UPDATING Invoice ${orderId}:`, invoicePayload);\n      // TODO: Call API to update orderId\n    } else {\n      console.log(\"SAVING New Invoice:\", invoicePayload);\n      // TODO: Call API to create new invoice\n    }\n    navigate('/orders');\n  };\n  const handleCancel = () => {\n    navigate('/orders'); // Navigate back to active orders\n  };\n\n  // --- Render Logic --- \n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(ManagerLayout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading invoice data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 14\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(ManagerLayout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red',\n          padding: '20px'\n        },\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 30\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(ManagerLayout, {\n    pageTitle: \"Add Invoice\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invoice-form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"invoice-form-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: isEditing ? `Edit Invoice #${orderId}` : 'New Invoice'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invoice-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSave,\n            className: \"button button-primary\",\n            children: \"Save Invoice\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCancel,\n            className: \"button button-secondary\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"invoice-meta\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"meta-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"customerName\",\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"customerName\",\n            value: customerName,\n            onChange: e => setCustomerName(e.target.value),\n            placeholder: \"Customer Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"meta-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"customerPhone\",\n            children: \"Phone:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"tel\",\n            id: \"customerPhone\",\n            value: customerPhone,\n            onChange: e => setCustomerPhone(e.target.value),\n            placeholder: \"Customer Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"meta-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Invoice #:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"invoice-number\",\n            children: isEditing ? orderId : 'Auto-Generated'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"meta-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"invoiceDate\",\n            children: \"Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"invoiceDate\",\n            value: invoiceDate,\n            onChange: e => setInvoiceDate(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"invoice-items-section scrollable\",\n        children: [/*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"data-table invoice-items-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Quantity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Weight\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  width: '50px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: items.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  value: item.quantity,\n                  onChange: e => handleItemChange(item.id, 'quantity', e.target.value),\n                  placeholder: \"0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: item.description,\n                  onChange: e => handleItemChange(item.id, 'description', e.target.value),\n                  placeholder: \"Item description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  value: item.weight,\n                  onChange: e => handleItemChange(item.id, 'weight', e.target.value),\n                  placeholder: \"0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  step: \"0.01\",\n                  value: item.price,\n                  onChange: e => handleItemChange(item.id, 'price', e.target.value),\n                  placeholder: \"0.00\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"$\", (item.amount || 0).toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"action-cell\",\n                children: (items.length > 1 || isEditing) && /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => removeItemRow(item.id),\n                  className: \"icon-button danger\",\n                  children: /*#__PURE__*/_jsxDEV(FaTrashAlt, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 103\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 19\n              }, this)]\n            }, item.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addItemRow,\n          className: \"button add-item-button\",\n          children: [/*#__PURE__*/_jsxDEV(FaPlus, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this), \" Add Item\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"invoice-total\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"TOTAL:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"$\", total.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n}\n_s(ManagerNewInvoice, \"Uh+gvkwm/3i2/cg7Ywkrie2lo3w=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = ManagerNewInvoice;\nexport default ManagerNewInvoice;\nvar _c;\n$RefreshReg$(_c, \"ManagerNewInvoice\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","ManagerLayout","FaPlus","FaTrashAlt","jsxDEV","_jsxDEV","getFormattedDate","date","Date","toISOString","split","fetchOrderData","orderId","console","log","allOrders","id","customerName","customerPhone","invoiceDate","total","items","quantity","description","weight","price","amount","numericOrderId","parseInt","foundOrder","find","order","Promise","resolve","ManagerNewInvoice","_s","navigate","isEditing","Boolean","setCustomerName","setCustomerPhone","setInvoiceDate","setItems","setTotal","isLoading","setIsLoading","error","setError","then","data","map","item","index","now","catch","err","finally","addItemRow","newId","handleItemChange","field","value","prevItems","newItem","parseFloat","removeItemRow","filter","newTotal","reduce","sum","handleSave","invoicePayload","rest","handleCancel","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","padding","pageTitle","className","onClick","htmlFor","type","onChange","e","target","placeholder","width","step","toFixed","length","_c","$RefreshReg$"],"sources":["/Users/christiansarmiento/Documents/GitHub/Atlas-V2/client/src/pages/ManagerNewInvoice.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport ManagerLayout from '../components/ManagerLayout';\nimport { FaPlus, FaTrashAlt } from 'react-icons/fa';\nimport '../styles/InvoiceForm.css';\n\n// Function to get formatted date yyyy-mm-dd\nconst getFormattedDate = (date = new Date()) => {\n  return date.toISOString().split('T')[0];\n};\n\n// --- Sample Data Fetching (Replace with actual API call) ---\n// This is just for demonstration purposes. In a real app, \n// you would fetch this from your backend based on orderId.\nconst fetchOrderData = (orderId) => {\n    console.log(\"Fetching data for order ID:\", orderId);\n    // Simulate finding order data (replace with actual API call)\n    const allOrders = [\n      { id: 112, customerName: 'Michoacano', customerPhone: '123-456-7890', invoiceDate: '2024-06-18', total: 457.00, items: [ { id: 1, quantity: 5, description: 'Ribeye Steak', weight: 15, price: 8.99, amount: 134.85 }, /* ... more items */ ] },\n      { id: 113, customerName: 'Mosner', customerPhone: '987-654-3210', invoiceDate: '2024-06-19', total: 160.00, items: [ { id: 1, quantity: 10, description: 'Chicken Wings', weight: 10, price: 2.50, amount: 25.00 }, /* ... more items */ ] },\n      // ... add other sample orders if needed for testing edit\n    ];\n    const numericOrderId = parseInt(orderId, 10);\n    const foundOrder = allOrders.find(order => order.id === numericOrderId);\n    console.log(\"Found Order:\", foundOrder)\n    return foundOrder ? Promise.resolve(foundOrder) : Promise.resolve(null); \n};\n// --- End Sample Data Fetching ---\n\nfunction ManagerNewInvoice() {\n  const navigate = useNavigate();\n  const { orderId } = useParams();\n  const isEditing = Boolean(orderId);\n\n  const [customerName, setCustomerName] = useState('');\n  const [customerPhone, setCustomerPhone] = useState('');\n  const [invoiceDate, setInvoiceDate] = useState(getFormattedDate());\n  const [items, setItems] = useState([\n    // Start with one empty item row only if creating new\n    // { id: 1, quantity: '', description: '', weight: '', price: '', amount: 0 },\n  ]);\n  const [total, setTotal] = useState(0);\n  const [isLoading, setIsLoading] = useState(isEditing);\n  const [error, setError] = useState(null);\n\n  // Fetch data if in edit mode\n  useEffect(() => {\n    if (isEditing) {\n      setIsLoading(true);\n      fetchOrderData(orderId)\n        .then(data => {\n          if (data) {\n            setCustomerName(data.customerName || '');\n            setCustomerPhone(data.customerPhone || '');\n            setInvoiceDate(data.invoiceDate ? getFormattedDate(new Date(data.invoiceDate)) : getFormattedDate());\n            setItems(data.items.map((item, index) => ({ ...item, id: item.id || Date.now() + index })) || []);\n            setTotal(data.total || 0);\n          } else {\n            setError('Order not found.');\n          }\n        })\n        .catch(err => {\n          console.error(\"Error fetching order data:\", err);\n          setError('Failed to load order data.');\n        })\n        .finally(() => {\n          setIsLoading(false);\n        });\n    } else {\n        // Start with one empty row if creating a new invoice\n        setItems([{ id: Date.now(), quantity: '', description: '', weight: '', price: '', amount: 0 }]);\n    }\n  }, [orderId, isEditing]);\n\n  // Function to add a new item row\n  const addItemRow = () => {\n    const newId = Date.now();\n    setItems([...items, { id: newId, quantity: '', description: '', weight: '', price: '', amount: 0 }]);\n  };\n\n  // Function to handle changes in item rows\n  const handleItemChange = (id, field, value) => {\n    setItems(prevItems => {\n      return prevItems.map(item => {\n        if (item.id === id) {\n          const newItem = { ...item, [field]: value };\n          if (field === 'quantity' || field === 'price') {\n            const quantity = parseFloat(newItem.quantity) || 0;\n            const price = parseFloat(newItem.price) || 0;\n            newItem.amount = quantity * price;\n          }\n          return newItem;\n        }\n        return item;\n      });\n    });\n  };\n\n  // Function to remove an item row\n  const removeItemRow = (id) => {\n    setItems(prevItems => prevItems.filter(item => item.id !== id));\n  };\n\n  // Calculate total whenever items change\n  useEffect(() => {\n    const newTotal = items.reduce((sum, item) => sum + (item.amount || 0), 0);\n    setTotal(newTotal);\n  }, [items]);\n\n  // --- Form Submission/Cancellation Handlers ---\n  const handleSave = () => {\n    const invoicePayload = {\n      customerName,\n      customerPhone,\n      invoiceDate,\n      items: items.map(({ id, ...rest }) => rest),\n      total\n    };\n\n    if (isEditing) {\n        console.log(`UPDATING Invoice ${orderId}:`, invoicePayload);\n        // TODO: Call API to update orderId\n    } else {\n        console.log(\"SAVING New Invoice:\", invoicePayload);\n        // TODO: Call API to create new invoice\n    }\n\n    navigate('/orders');\n  };\n\n  const handleCancel = () => {\n    navigate('/orders'); // Navigate back to active orders\n  };\n\n  // --- Render Logic --- \n  if (isLoading) {\n      return <ManagerLayout><div>Loading invoice data...</div></ManagerLayout>;\n  }\n\n  if (error) {\n       return <ManagerLayout><div style={{ color: 'red', padding: '20px' }}>Error: {error}</div></ManagerLayout>;\n  }\n\n  return (\n    <ManagerLayout pageTitle=\"Add Invoice\">\n      <div className=\"invoice-form-container\">\n        <div className=\"invoice-form-header\">\n          <h2>{isEditing ? `Edit Invoice #${orderId}` : 'New Invoice'}</h2>\n          <div className=\"invoice-actions\">\n            <button onClick={handleSave} className=\"button button-primary\">Save Invoice</button>\n            <button onClick={handleCancel} className=\"button button-secondary\">Cancel</button>\n          </div>\n        </div>\n\n        {/* Invoice Header Fields */}\n        <div className=\"invoice-meta\">\n            <div className=\"meta-item\">\n                <label htmlFor=\"customerName\">Name:</label>\n                <input\n                    type=\"text\"\n                    id=\"customerName\"\n                    value={customerName}\n                    onChange={(e) => setCustomerName(e.target.value)}\n                    placeholder=\"Customer Name\"\n                />\n            </div>\n            <div className=\"meta-item\">\n                <label htmlFor=\"customerPhone\">Phone:</label>\n                <input\n                    type=\"tel\"\n                    id=\"customerPhone\"\n                    value={customerPhone}\n                    onChange={(e) => setCustomerPhone(e.target.value)}\n                    placeholder=\"Customer Phone\"\n                />\n            </div>\n            <div className=\"meta-item\">\n                <label>Invoice #:</label>\n                <span className=\"invoice-number\">{isEditing ? orderId : 'Auto-Generated'}</span>\n            </div>\n            <div className=\"meta-item\">\n                <label htmlFor=\"invoiceDate\">Date:</label>\n                <input\n                    type=\"date\"\n                    id=\"invoiceDate\"\n                    value={invoiceDate}\n                    onChange={(e) => setInvoiceDate(e.target.value)}\n                />\n            </div>\n        </div>\n\n        {/* Invoice Items Table */}\n        <div className=\"invoice-items-section scrollable\">\n          <table className=\"data-table invoice-items-table\">\n            <thead>\n              <tr>\n                <th>Quantity</th>\n                <th>Description</th>\n                <th>Weight</th>\n                <th>Price</th>\n                <th>Amount</th>\n                <th style={{width: '50px'}}></th>\n              </tr>\n            </thead>\n            <tbody>\n              {items.map((item) => (\n                <tr key={item.id}>\n                  <td><input type=\"number\" value={item.quantity} onChange={(e) => handleItemChange(item.id, 'quantity', e.target.value)} placeholder=\"0\" /></td>\n                  <td><input type=\"text\" value={item.description} onChange={(e) => handleItemChange(item.id, 'description', e.target.value)} placeholder=\"Item description\" /></td>\n                  <td><input type=\"number\" value={item.weight} onChange={(e) => handleItemChange(item.id, 'weight', e.target.value)} placeholder=\"0\" /></td>\n                  <td><input type=\"number\" step=\"0.01\" value={item.price} onChange={(e) => handleItemChange(item.id, 'price', e.target.value)} placeholder=\"0.00\" /></td>\n                  <td>${(item.amount || 0).toFixed(2)}</td>\n                  <td className=\"action-cell\">\n                    {(items.length > 1 || isEditing) && (\n                        <button onClick={() => removeItemRow(item.id)} className=\"icon-button danger\"><FaTrashAlt /></button>\n                    )}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n          <button onClick={addItemRow} className=\"button add-item-button\">\n            <FaPlus /> Add Item\n          </button>\n        </div>\n\n        {/* Invoice Total */}\n        <div className=\"invoice-total\">\n          <span>TOTAL:</span>\n          <span>${total.toFixed(2)}</span>\n        </div>\n\n      </div>\n    </ManagerLayout>\n  );\n}\n\nexport default ManagerNewInvoice; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}